(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{240:function(t,s,a){t.exports=a.p+"assets/img/wechat.50adb4d4.png"},463:function(t,s,a){t.exports=a.p+"assets/img/4 airflow-table-dag.fd0c090f.png"},464:function(t,s,a){t.exports=a.p+"assets/img/4 airflow-table-dagrun.7808f388.png"},465:function(t,s,a){t.exports=a.p+"assets/img/4 airflow-table-task_instance.4dab27ff.png"},466:function(t,s,a){t.exports=a.p+"assets/img/4.2.2 operator.1ffae418.png"},467:function(t,s,a){t.exports=a.p+"assets/img/4.2.2 sensors.d6fa8663.png"},468:function(t,s,a){t.exports=a.p+"assets/img/4.2 airflow架构.ff727812.png"},469:function(t,s,a){t.exports=a.p+"assets/img/4.2.2 airflow调度流程图.28e647b0.png"},470:function(t,s,a){t.exports=a.p+"assets/img/3 airflow-webserver.6ab26862.png"},471:function(t,s,a){t.exports=a.p+"assets/img/4.2.2 任务实例状态变迁-0.4ed77f2d.png"},472:function(t,s,a){t.exports=a.p+"assets/img/4.2.2 任务实例状态变迁.e5fdeec4.png"},473:function(t,s,a){t.exports=a.p+"assets/img/4 SenquantialExecutor.5a7eda5b.png"},474:function(t,s,a){t.exports=a.p+"assets/img/4.2.2 airflow-python-execute.86221042.png"},475:function(t,s,a){t.exports=a.p+"assets/img/4.2.2 airflow-bash-execute.e20ea300.png"},652:function(t,s,a){"use strict";a.r(s);var n=a(14),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"核心概念"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#核心概念"}},[t._v("#")]),t._v(" 核心概念")]),t._v(" "),s("h3",{attrs:{id:"部署架构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#部署架构"}},[t._v("#")]),t._v(" 部署架构")]),t._v(" "),s("p",[t._v("下面是 Airflow 的分布式部署架构，其中 Airflow 的组件分布在多台机器上，并引入了各种用户角色 - Deployment Manager、DAG Author、Operations User。")]),t._v(" "),s("p",[t._v("在分布式部署的情况下，Airflow考虑了组件的安全性。 其中，Webserver无法直接访问 DAG 文件。 UI 的“代码”选项卡中的代码是从Metadata DB中读取的。网络服务器无法执行 DAG Author提交的任何代码。它只能执行由部署管理器作为安装包或插件安装的代码。Operations User只能访问 UI，并且只能触发 DAG 和任务，但无法创作 DAG。")]),t._v(" "),s("p",[t._v("DAG 文件需要在使用它们的所有组件（scheduler、trigger和workers）之间进行同步。 DAG Processor组件是独立的，该组件允许将Scheduler与访问 DAG 文件分开。如果部署重点是解析的任务之间的隔离，那么这是合适的。虽然 Airflow 尚不支持完整的多租户功能，但它可用于确保 DAG Author提供的代码永远不会在Scheduler的上下文中执行。")]),t._v(" "),s("img",{staticStyle:{zoom:"67%"},attrs:{src:"https://airflow.apache.org/docs/apache-airflow/stable/_images/diagram_dag_processor_airflow_architecture.png"}}),t._v(" "),s("h3",{attrs:{id:"dag"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dag"}},[t._v("#")]),t._v(" DAG")]),t._v(" "),s("p",[t._v("Airflow中的工作流由一组有向无环图DAG（Directed Acyclic Graph）表示，其中节点表示任务（Task），边表示任务之间的依赖关系。DAG定义了任务的执行顺序和依赖关系，以确保工作流程按照预期的逻辑执行。如上图所示，这些DAG定义存储在DAG目录中，Airflow会定期去扫描。")]),t._v(" "),s("img",{staticStyle:{zoom:"67%"},attrs:{src:"https://airflow.apache.org/docs/apache-airflow/stable/_images/basic-dag.png"}}),t._v(" "),s("p",[t._v("如下是一个简单的DAG定义，DAG定义本身就是一个python文件。")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" datetime "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" datetime"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" timedelta\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" airflow "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" DAG\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" airflow"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("operators"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dummy_operator "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" DummyOperator\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 定义DAG参数")]),t._v("\ndag_args "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'owner'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'airflow'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'start_date'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" datetime"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2021")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'retries'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'retry_delay'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" timedelta"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("minutes"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建DAG实例")]),t._v("\ndag "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" DAG"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    dag_id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'my_example_dag'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    default_args"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("dag_args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    description"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'A simple example DAG'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    schedule_interval"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("timedelta"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("days"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 定义任务")]),t._v("\ntask_1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" DummyOperator"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    task_id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'task_1'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    dag"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("dag"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\ntask_2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" DummyOperator"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    task_id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'task_2'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    dag"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("dag"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 定义任务依赖关系(指定执行顺序：先task_1，再task_2)")]),t._v("\ntask_1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" task_2\n")])])]),s("p",[t._v("如下是airflow中dag的表定义：")]),t._v(" "),s("img",{staticStyle:{zoom:"50%"},attrs:{src:a(463),alt:"image-20231107200240499"}}),t._v(" "),s("h3",{attrs:{id:"dagrun"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dagrun"}},[t._v("#")]),t._v(" DagRun")]),t._v(" "),s("p",[t._v("Dag的一次运行，即工作流实例。如下所示是Dag Run的表定义，可以看到其中包含了Dag主键ID。")]),t._v(" "),s("img",{staticStyle:{zoom:"50%"},attrs:{src:a(464),alt:"image-20231107200316323"}}),t._v(" "),s("h3",{attrs:{id:"task"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#task"}},[t._v("#")]),t._v(" Task")]),t._v(" "),s("p",[t._v("Task任务是Airflow的Dag定义中的基本执行单元，相当于工作流中的一个节点。任务被排列成 DAG，然后在它们之间设置上游和下游依赖关系，以表达它们应该运行的顺序。")]),t._v(" "),s("p",[t._v("Task任务分为三种基本类型：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("Operators：预定义任务模板，可以将它们快速串联起来以构建 DAG 的大部分。")])]),t._v(" "),s("li",[s("p",[t._v("Sensors：是操作员的一个特殊子类，完全用于等待外部事件发生。")])]),t._v(" "),s("li",[s("p",[t._v("TaskFlow：修饰的@task，它是一个打包为Task的自定义Python函数。")])])]),t._v(" "),s("p",[t._v("在内部，这些实际上都是 Airflow BaseOperator 的子类，Task和Operator的概念在某种程度上可以互换，但将它们视为单独的概念很有用 - 本质上，Operators和Sensors是模板，当您在 DAG 文件中调用其中一个时，你正在做一个任务。")]),t._v(" "),s("p",[t._v("在Dag中不同Task之间一般有先后的顺序关系。例如下面的Dag中包含了两个Task。")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("with")]),t._v(" DAG"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'my_example_dag'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" start_date"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("datetime"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2021")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" dag"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    task_1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" DummyOperator"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'task_1'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    task_2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" DummyOperator"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'task_2'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    task_1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" task_2\n")])])]),s("p",[t._v("除了用位操作符表示顺序关系，也可以通过"),s("code",[t._v("set_upstream")]),t._v("和"),s("code",[t._v("set_downstream")]),t._v("方法：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("task_1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("set_downstream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("task_2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"taskinstance"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#taskinstance"}},[t._v("#")]),t._v(" TaskInstance")]),t._v(" "),s("p",[t._v("TaskInstance是DagRun下面的一个任务实例，表示某个Task任务的一次运行。对于每个DagRun实例，Operator都将转换成对应的TaskInstance。")]),t._v(" "),s("p",[t._v("如下图是TaskInstance的表定义：")]),t._v(" "),s("img",{staticStyle:{zoom:"50%"},attrs:{src:a(465),alt:"image-20231107200638502"}}),t._v(" "),s("p",[t._v("TaskInstance有如下一些状态：")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("none: 任务尚未排队执行（其依赖项尚未满足）")])]),t._v(" "),s("li",[s("p",[t._v("scheduled: 调度程序已确定任务的依赖项已满足，应该运行")])]),t._v(" "),s("li",[s("p",[t._v("queued: 任务已分配给执行器，正在等待worker")])]),t._v(" "),s("li",[s("p",[t._v("running: 任务正在worker上运行（或在本地/同步执行器上运行）")])]),t._v(" "),s("li",[s("p",[t._v("success: 任务已成功运行而没有错误")])]),t._v(" "),s("li",[s("p",[t._v("restarting: 任务在运行时被外部请求重新启动")])]),t._v(" "),s("li",[s("p",[t._v("failed: 任务在执行过程中出现错误，无法运行")])]),t._v(" "),s("li",[s("p",[t._v("skipped: 任务被跳过。")])]),t._v(" "),s("li",[s("p",[t._v("upstream_failed: 上游任务失败，触发规则表示需要它")])]),t._v(" "),s("li",[s("p",[t._v("up_for_retry: 任务失败，但还有重试尝试，并将被重新安排。")])]),t._v(" "),s("li",[s("p",[t._v("up_for_reschedule: 任务是处于重新安排模式的Sensor")])]),t._v(" "),s("li",[s("p",[t._v("deferred: 任务已推迟到触发器")])]),t._v(" "),s("li",[s("p",[t._v("removed: 由于运行开始，任务已从DAG中消失")])])]),t._v(" "),s("p",[t._v("其状态流转如下图所示：")]),t._v(" "),s("img",{staticStyle:{zoom:"67%"},attrs:{src:"https://airflow.apache.org/docs/apache-airflow/stable/_images/task_lifecycle_diagram.png"}}),t._v(" "),s("h3",{attrs:{id:"operators"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#operators"}},[t._v("#")]),t._v(" Operators")]),t._v(" "),s("p",[t._v("Airflow提供了一组预定义的操作符（Operator），用于创建和执行任务。操作符是Python类，可以用于实例化任务并定义任务的执行逻辑。其中内置了一下一些常用的Operator：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("BashOperator")]),t._v("- 执行bash命令")]),t._v(" "),s("li",[s("code",[t._v("PythonOperator")]),t._v("- 调用python函数")]),t._v(" "),s("li",[s("code",[t._v("EmailOperator")]),t._v(" - 发送邮件")])]),t._v(" "),s("img",{staticStyle:{zoom:"50%"},attrs:{src:a(466),alt:"image-20240322090843274"}}),t._v(" "),s("p",[t._v("如下在DAG中使用预定义的Operator声明Task任务：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("with")]),t._v(" DAG"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"my-dag"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" dag"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    ping "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" SimpleHttpOperator"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("endpoint"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"http://example.com/update/"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    email "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" EmailOperator"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("to"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"admin@example.com"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" subject"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Update complete"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    ping "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" email\n")])])]),s("h3",{attrs:{id:"sensors"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sensors"}},[t._v("#")]),t._v(" Sensors")]),t._v(" "),s("p",[t._v("传感器是一种特殊类型的Operator，旨在完成一件事 - 等待某些事情发生。它可以是基于时间的，或者等待文件或外部事件，但它们所做的只是等到事情发生，然后成功，以便下游任务可以运行。")]),t._v(" "),s("p",[t._v("其中内置了一些常用的Sensor，例如：BashSensor、PythonSensor、DateTimeSensor等。")]),t._v(" "),s("img",{staticStyle:{zoom:"50%"},attrs:{src:a(467),alt:"image-20240322090701122"}}),t._v(" "),s("h3",{attrs:{id:"scheduler"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#scheduler"}},[t._v("#")]),t._v(" Scheduler")]),t._v(" "),s("p",[t._v("Airflow中的调度器（Scheduler）负责根据DAG的定义和调度时间，触发任务的执行。调度器会周期性地检查DAG，并在满足调度条件时创建任务实例（Task Instance）并将其提交给执行器（Executor）。从下图的架构可以知道调度器是Airflow工作流引擎的核心组件。")]),t._v(" "),s("img",{staticStyle:{zoom:"50%"},attrs:{src:a(468),alt:"image-20240131092519679"}}),t._v(" "),s("h3",{attrs:{id:"executor"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#executor"}},[t._v("#")]),t._v(" Executor")]),t._v(" "),s("p",[t._v("执行器（Executor）负责执行任务实例（Task Instance）。Airflow支持多种执行器，如LocalExecutor（本地执行器）、CeleryExecutor（基于Celery的分布式执行器）、KubernetesExecutor（基于Kubernetes的执行器）等。执行器可以根据任务的需求分配资源，并处理任务的并发和故障恢复。")]),t._v(" "),s("p",[t._v("可以通过下面的命令查看当前使用的Executor类型：")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("airflow config get-value core executor\nSequentialExecutor\n")])])]),s("h3",{attrs:{id:"workers"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#workers"}},[t._v("#")]),t._v(" Workers")]),t._v(" "),s("p",[t._v("实际执行任务的进程，由Executor确定。")]),t._v(" "),s("h3",{attrs:{id:"xcoms"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#xcoms"}},[t._v("#")]),t._v(" XComs")]),t._v(" "),s("p",[t._v("XCom（跨任务通信）是一种机制，允许任务之间交换数据。XCom是存储在Airflow元数据数据库中的键值对，每个XCom都与一个特定的任务实例和执行日期相关联。任务可以通过XCom将数据推送（push）到数据库中，以便其他任务可以在稍后拉取（pull）这些数据。")]),t._v(" "),s("p",[t._v("以下是一个简单的示例，说明了如何在Airflow任务之间使用XCom传递数据：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" airflow "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" DAG\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" airflow"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("operators"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("python_operator "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" PythonOperator\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" datetime "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" datetime\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("push_function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("kwargs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    value_to_push "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello, XCom!"')]),t._v("\n    kwargs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ti'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("xcom_push"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'my_key'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("value_to_push"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("pull_function")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("kwargs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    value_to_pull "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" kwargs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ti'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("xcom_pull"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'my_key'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" task_ids"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'push_task'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string-interpolation"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('f"Pulled value: ')]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("value_to_pull"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("with")]),t._v(" DAG"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dag_id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'xcom_example_dag'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" start_date"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("datetime"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2021")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" schedule_interval"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" dag"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    push_task "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" PythonOperator"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n        task_id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'push_task'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        python_callable"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("push_function"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        provide_context"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    pull_task "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" PythonOperator"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n        task_id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'pull_task'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        python_callable"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("pull_function"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        provide_context"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    push_task "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" pull_task\n")])])]),s("p",[t._v("在这个示例中，我们创建了一个简单的DAG，包含两个"),s("code",[t._v("PythonOperator")]),t._v("任务："),s("code",[t._v("push_task")]),t._v("和"),s("code",[t._v("pull_task")]),t._v("。"),s("code",[t._v("push_task")]),t._v("任务调用"),s("code",[t._v("push_function")]),t._v('，将一个字符串值（"Hello, XCom!"）推送到XCom中，键名为'),s("code",[t._v("my_key")]),t._v("。"),s("code",[t._v("pull_task")]),t._v("任务调用"),s("code",[t._v("pull_function")]),t._v("，从XCom中拉取键名为"),s("code",[t._v("my_key")]),t._v("的值，并将其打印出来。")]),t._v(" "),s("p",[t._v("注意，在这个示例中，我们将"),s("code",[t._v("provide_context=True")]),t._v("设置为任务的参数，以便将任务实例（"),s("code",[t._v("ti")]),t._v("）和其他上下文信息传递给"),s("code",[t._v("push_function")]),t._v("和"),s("code",[t._v("pull_function")]),t._v("。")]),t._v(" "),s("p",[t._v("XCom 与Variables相对，主要区别在于 XCom 是针对每个任务实例的，专为 DAG 运行中的通信而设计，而 Variables 是全局的，专为整体配置和价值共享而设计。")]),t._v(" "),s("h3",{attrs:{id:"variables"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#variables"}},[t._v("#")]),t._v(" Variables")]),t._v(" "),s("p",[s("code",[t._v("Variable")]),t._v("是一种在DAG中存储和管理全局配置信息的机制。"),s("code",[t._v("Variable")]),t._v("允许你在Airflow元数据数据库中存储键值对，这些键值对可以在整个DAG中的任务之间共享。使用"),s("code",[t._v("Variable")]),t._v("可以帮助你将配置信息与任务代码分离，从而使DAG更易于维护和扩展。")]),t._v(" "),s("p",[t._v("以下是一个简单的示例，说明了如何在Airflow任务中使用"),s("code",[t._v("Variable")]),t._v("：")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://airflow.apache.org/docs/apache-airflow/stable/_images/variable_hidden.png",alt:""}})]),t._v(" "),s("p",[t._v("首先，在Airflow Web UI的Admin菜单中，进入Variables页面。点击“创建”按钮，创建一个新的变量，例如键名为"),s("code",[t._v("example_key")]),t._v("，值为"),s("code",[t._v("example_value")]),t._v("。")]),t._v(" "),s("p",[t._v("然后，在DAG中使用这个变量：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" airflow "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" DAG\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" airflow"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("operators"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("python_operator "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" PythonOperator\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" airflow"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("models "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" Variable\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" datetime "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" datetime\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("print_variable")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("kwargs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    example_value "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Variable"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"example_key"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string-interpolation"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v("f\"Variable 'example_key': ")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("example_value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("with")]),t._v(" DAG"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dag_id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'variable_example_dag'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" start_date"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("datetime"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2021")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" schedule_interval"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" dag"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    print_variable_task "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" PythonOperator"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n        task_id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'print_variable_task'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        python_callable"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("print_variable"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        provide_context"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("在这个示例中，我们创建了一个简单的DAG，包含一个"),s("code",[t._v("PythonOperator")]),t._v("任务："),s("code",[t._v("print_variable_task")]),t._v("。这个任务调用"),s("code",[t._v("print_variable")]),t._v("函数，从"),s("code",[t._v("Variable")]),t._v("中获取键名为"),s("code",[t._v("example_key")]),t._v("的值，并将其打印出来。")]),t._v(" "),s("p",[t._v("注意，我们使用"),s("code",[t._v("Variable.get()")]),t._v("方法从Airflow的变量中获取值。这个方法接受一个键名作为参数，并返回与该键名关联的值。")]),t._v(" "),s("h3",{attrs:{id:"metadata-database"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#metadata-database"}},[t._v("#")]),t._v(" Metadata Database")]),t._v(" "),s("p",[t._v("Airflow使用元数据数据库（Metadata Database）来存储DAG的定义、任务实例的状态、调度历史等信息。元数据数据库可以是关系型数据库（如PostgreSQL、MySQL等）或其他兼容的存储系统。通过元数据数据库，Airflow可以实现对任务实例的持久化存储和状态管理。")]),t._v(" "),s("p",[t._v("注意：DAG的持久化存储是从2.x版本开始。")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://airflow.apache.org/docs/apache-airflow/stable/_images/dag_serialization.png",alt:""}})]),t._v(" "),s("h3",{attrs:{id:"web-server"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#web-server"}},[t._v("#")]),t._v(" Web Server")]),t._v(" "),s("p",[t._v("Airflow提供了一个Web服务器，用于展示工作流程的状态、任务实例的执行情况、任务日志等信息。用户可以通过Web界面监控和管理工作流程，以及手动触发任务、重试失败的任务等。")]),t._v(" "),s("img",{staticStyle:{zoom:"33%"},attrs:{src:"https://airflow.apache.org/docs/apache-airflow/stable/_images/dags.png"}}),t._v(" "),s("h2",{attrs:{id:"核心类和方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#核心类和方法"}},[t._v("#")]),t._v(" 核心类和方法")]),t._v(" "),s("p",[t._v("Apache Airflow是一个用于编排、调度和监控复杂数据管道的工具。其核心概念是基于Directed Acyclic Graph (DAG)算法实现的。以下是一些与Airflow DAG相关的核心函数和类：")]),t._v(" "),s("ol",[s("li",[s("p",[s("code",[t._v("Dag")]),t._v("：定义DAG的主要类。它包含了DAG的所有基本属性，如dag_id、start_date、schedule_interval等。")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("BaseOperator")]),t._v("：所有Airflow任务都是从这个基类派生的。这个类包含了任务的基本属性和方法，如task_id、retries、execute()等。")]),t._v(" "),s("p",[t._v("这个类是抽象的，不应该被实例化。实例化从此类派生的类会导致创建一个任务对象，该对象最终成为 DAG 对象中的一个节点。同时，使用 set_upstream 或 set_downstream 方法设置任务依赖关系。例如下面几种常见的Operator：")]),t._v(" "),s("ol",[s("li",[s("p",[s("code",[t._v("PythonOperator")]),t._v("：用于执行Python函数的操作符。")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("BranchOperator")]),t._v("：用于在DAG中实现条件分支的操作符。它根据提供的Python可调用对象的返回值来选择要执行的分支。")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("SubDagOperator")]),t._v("：用于将一个子DAG嵌套到另一个DAG中的操作符。")])])])]),t._v(" "),s("li",[s("p",[s("code",[t._v("TaskInstance")]),t._v("：表示任务实例。它包含了任务实例的状态、执行时间、重试次数等信息。")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("DagBag")]),t._v("：用于存储和管理所有DAG的容器。它提供了一些方法来查找和操作DAG。")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("DagRun")]),t._v("：表示DAG运行的类。它包含了DAG运行的状态、执行时间、外部触发等信息。")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("SchedulerJob")]),t._v("：负责调度和执行DAG的类。它包含了一些核心方法，如_process_dags()、_execute_task_instances()等。")])])]),t._v(" "),s("h2",{attrs:{id:"核心调度流程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#核心调度流程"}},[t._v("#")]),t._v(" 核心调度流程")]),t._v(" "),s("p",[t._v("Airflow的从DAG文件的定义，到DAG调度，以及任务的执行，其整体调度流程如下所示：")]),t._v(" "),s("img",{staticStyle:{zoom:"150%"},attrs:{src:a(469),alt:"image-20240326202349569"}}),t._v(" "),s("p",[s("em",[s("strong",[t._v("注意：下面所有源码基于的airflow版本是：2.x。")])])]),t._v(" "),s("h3",{attrs:{id:"_1、启动scheduler调度器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、启动scheduler调度器"}},[t._v("#")]),t._v(" 1、启动Scheduler调度器")]),t._v(" "),s("blockquote",[s("p",[t._v("main")])]),t._v(" "),s("p",[t._v("在安装好python环境后，我们通过如下pip命令安装airflow")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("pip "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" apache-airflow\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 初始化数据库")]),t._v("\nairflow db init\n")])])]),s("p",[t._v("安装成功后可以看到airflow版本：")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("airflow version\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.7")]),t._v(".2\n")])])]),s("p",[t._v("我们可以查看airflow支持的命令行参数，其中的scheduler命令就是我们需要关注的airflow调度器。")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("airflow "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-help")]),t._v("\nUsage: airflow "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("-h"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" GROUP_OR_COMMAND "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n\nPositional Arguments:\n  GROUP_OR_COMMAND\n\n    Groups\n      config         View configuration\n      connections    Manage connections\n      dags           Manage DAGs\n      db             Database operations\n      "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("jobs")]),t._v("           Manage "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("jobs")]),t._v("\n      pools          Manage pools\n      providers      Display providers\n      roles          Manage roles\n      tasks          Manage tasks\n      "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("users")]),t._v("          Manage "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("users")]),t._v("\n      variables      Manage variables\n\n    Commands:\n      cheat-sheet    Display cheat sheet\n      dag-processor  Start a standalone Dag Processor instance\n      info           Show information about current Airflow and environment\n      kerberos       Start a kerberos ticket renewer\n      plugins        Dump information about loaded plugins\n      rotate-fernet-key\n                     Rotate encrypted connection credentials and variables\n      scheduler      Start a scheduler instance\n      standalone     Run an all-in-one copy of Airflow\n      sync-perm      Update permissions "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" existing roles and optionally DAGs\n      triggerer      Start a triggerer instance\n      version        Show the version\n      webserver      Start a Airflow webserver instance\n\nOptions:\n  -h, "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--help")]),t._v("         show this "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("help")]),t._v(" message and "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("exit")]),t._v("\n\nairflow "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("command")]),t._v(" error: argument -h/--help: ignored explicit argument "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'elp'")]),t._v(", see "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("help")]),t._v(" above.\n")])])]),s("p",[s("em",[t._v("备注：如果想要快速方便去调试观察Airflow的运行流程，可以使用上面的"),s("code",[t._v("airflow standalone")]),t._v("命令一键部署所有服务。")])]),t._v(" "),s("p",[t._v("运行webserver服务，成功运行后显示如下日志，默认是8080端口。")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("airflow webserver\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2023")]),t._v("-11-02T12:51:52.192+0800"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("configuration.py:2067"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" INFO - Creating new FAB webserver config "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("file")]),t._v(" in: /Users/shuwoom/Desktop/airflow/webserver_config.py\n  ____________       _____________\n ____    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("__"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("_________  __/__  /________      __\n____  /"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("_  /__  ___/_  /_ __  /_  __ "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("_ "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" /"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" / /\n___  ___ "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("  / _  /   _  __/ _  / / /_/ /_ "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("/ "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("/ /\n _/_/  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("_/_/  /_/    /_/    /_/  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("____/____/"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("__/\nRunning the Gunicorn Server with:\nWorkers: "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sync")]),t._v("\nHost: "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.0")]),t._v(".0.0:8080\nTimeout: "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("120")]),t._v("\nLogfiles: - -\nAccess Logformat:\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("\n")])])]),s("p",[t._v("创建一个管理员账号：")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("airflow "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("users")]),t._v(" create "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--username")]),t._v(" airflow "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--role")]),t._v(" Admin  "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--email")]),t._v(" test@qq.com "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--firstname")]),t._v(" admin "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--lastname")]),t._v(" admin  "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--password")]),t._v(" airflow\n")])])]),s("p",[t._v("访问上述地址，就进入到airflow的web管理页面。")]),t._v(" "),s("img",{staticStyle:{zoom:"50%"},attrs:{src:a(470),alt:"image-20231102125855751"}}),t._v(" "),s("p",[t._v("通过如下命令，我们可以运行scheduler调度器，运行成功后打印如下日志。")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("airflow scheduler \n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2023")]),t._v("-11-02T13:00:46.811+0800"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("migration.py:213"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" INFO - Context impl SQLiteImpl.\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2023")]),t._v("-11-02T13:00:46.812+0800"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("migration.py:216"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" INFO - Will assume non-transactional DDL.\nINFO  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("alembic.runtime.migration"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Context impl SQLiteImpl.\nINFO  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("alembic.runtime.migration"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Will assume non-transactional DDL.\nINFO  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("alembic.runtime.migration"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Running stamp_revision  -"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 405de8318b3a\nWARNI "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("airflow.models.crypto"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" empty cryptography key - values will not be stored encrypted.\nDB initialize "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("done")]),t._v("\n  ____________       _____________\n ____    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("__"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("_________  __/__  /________      __\n____  /"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("_  /__  ___/_  /_ __  /_  __ "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("_ "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" /"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" / /\n___  ___ "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("  / _  /   _  __/ _  / / /_/ /_ "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("/ "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("/ /\n _/_/  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("_/_/  /_/    /_/    /_/  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("____/____/"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("__/\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2023")]),t._v("-11-02 "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("13")]),t._v(":00:47 +0800"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("55179")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("INFO"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Starting gunicorn "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("21.2")]),t._v(".0\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2023")]),t._v("-11-02 "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("13")]),t._v(":00:47 +0800"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("55179")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("INFO"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Listening at: http://"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("::"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(":8793 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("55179")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2023")]),t._v("-11-02 "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("13")]),t._v(":00:47 +0800"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("55179")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("INFO"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Using worker: "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sync")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2023")]),t._v("-11-02 "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("13")]),t._v(":00:47 +0800"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("55181")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("INFO"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" Booting worker with pid: "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("55181")]),t._v("\n")])])]),s("p",[t._v("而airflow命令行参数的入口正是下面的main函数，通过传递scheduler命令启动airflow的调度器服务。")]),t._v(" "),s("h4",{attrs:{id:"main入口"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#main入口"}},[t._v("#")]),t._v(" main入口")]),t._v(" "),s("p",[s("code",[t._v("main")]),t._v(" 函数的主要目的是解析命令行参数，并根据解析后的参数执行相应的 Airflow 命令。在执行命令之前，它还确保了默认配置文件已经写入磁盘。")]),t._v(" "),s("p",[t._v("以下是该函数的功能说明：")]),t._v(" "),s("p",[t._v("文件路径：airflow/_"),s("em",[t._v("main")]),t._v("_.py")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 1.从 Airflow 配置文件中获取配置对象 conf。")]),t._v("\n    conf "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" configuration"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("conf\n    \n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# 2.如果配置文件中的 core.security 设置为 "kerberos"，则从配置文件中读取 Kerberos 相关的设置（如 ccache 和 keytab），并将它们设置为环境变量。')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" conf"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"core"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"security"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"kerberos"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        os"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("environ"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"KRB5CCNAME"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" conf"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"kerberos"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ccache"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        os"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("environ"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"KRB5_KTNAME"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" conf"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"kerberos"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"keytab"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        \n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 3.调用 cli_parser.get_parser() 函数创建一个命令行参数解析器。")]),t._v("\n    parser "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" cli_parser"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get_parser"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    \n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 4.使用 argcomplete.autocomplete(parser) 为解析器启用自动补全功能。")]),t._v("\n    argcomplete"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("autocomplete"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("parser"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    \n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 5.解析命令行参数，并将结果存储在 args 变量中。")]),t._v("\n    args "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" parser"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("parse_args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    \n    \n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# 6.如果子命令不是 "lazy_loaded" 或 "version"，则执行以下操作：    ')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("subcommand "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("not")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"lazy_loaded"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"version"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 7.调用 write_default_airflow_configuration_if_needed 函数，确保在运行任何可能需要默认配置的命令之前，将默认配置文件写入磁盘（如果需要的话）。")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" airflow"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("configuration "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" write_default_airflow_configuration_if_needed\n        conf "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" write_default_airflow_configuration_if_needed"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        \n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# 8.如果子命令是 "webserver"、"internal-api" 或 "worker"，则调用 write_webserver_configuration_if_needed 函数，确保在运行这些命令之前，将 Web 服务器的默认配置文件写入磁盘（如果需要的话）。')]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("subcommand "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"webserver"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"internal-api"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"worker"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            write_webserver_configuration_if_needed"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("conf"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("func"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" __name__ "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"__main__"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    main"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("这里会加载Airflow配置文件，Airflow 配置文件（默认为 "),s("code",[t._v("airflow.cfg")]),t._v("）包含了许多配置参数，这些参数被分为不同的节（sections）。以下是一些主要的节和它们的部分参数：")]),t._v(" "),s("p",[s("code",[t._v("[core]")]),t._v("：核心配置参数。")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("dags_folder")]),t._v("：DAG 文件的存放路径。")]),t._v(" "),s("li",[s("code",[t._v("load_examples")]),t._v("：是否加载示例 DAG。")]),t._v(" "),s("li",[s("code",[t._v("executor")]),t._v("：使用的执行器类型，如 "),s("code",[t._v("SequentialExecutor")]),t._v("、"),s("code",[t._v("LocalExecutor")]),t._v(" 或 "),s("code",[t._v("CeleryExecutor")]),t._v("，默认是"),s("code",[t._v("SequentialExecutor")]),t._v("。")]),t._v(" "),s("li",[s("code",[t._v("sql_alchemy_conn")]),t._v("：用于连接元数据库的 SQL Alchemy 连接字符串。")]),t._v(" "),s("li",[s("code",[t._v("parallelism")]),t._v("：允许的最大并行任务数。")])]),t._v(" "),s("p",[t._v("接下来展开分析get_parser函数。")]),t._v(" "),s("h4",{attrs:{id:"get-parser函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#get-parser函数"}},[t._v("#")]),t._v(" get_parser函数")]),t._v(" "),s("p",[s("code",[t._v("get_parser")]),t._v(" 函数的主要目的是创建一个命令行参数解析器，用于解析 Airflow 命令行工具中的命令和参数。")]),t._v(" "),s("p",[t._v("以下是该函数的功能说明：")]),t._v(" "),s("p",[t._v("文件路径：airflow/airflow/cli/cli_parser.py")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 这里的core_commands包含了scheduler命令，见下面介绍")]),t._v("\nairflow_commands "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" core_commands"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("copy"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\nALL_COMMANDS_DICT"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("dict")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("str")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" CLICommand"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("sp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" sp "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" sp "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" airflow_commands"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get_parser")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dag_parser"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bool")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("False")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" argparse"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ArgumentParser"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[t._v('"""Create and returns command line argument parser."""')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 1.创建一个名为 airflow 的 argparse.ArgumentParser 实例，使用自定义的帮助解析器 DefaultHelpParser 和格式化类 AirflowHelpFormatter。")]),t._v("\n    parser "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" DefaultHelpParser"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("prog"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"airflow"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" formatter_class"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("AirflowHelpFormatter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    \n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# 2.为解析器添加子解析器（subparsers），用于处理子命令（如 airflow scheduler 中的 scheduler）。设置子解析器的目标属性为 "subcommand"，元变量为 "GROUP_OR_COMMAND"。这样，在解析命令行参数时，子命令将被存储在 args.subcommand 属性中。')]),t._v("\n    subparsers "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" parser"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("add_subparsers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dest"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"subcommand"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" metavar"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"GROUP_OR_COMMAND"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    \n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 3.设置 subparsers.required 为 True，表示必须提供一个子命令。")]),t._v("\n    subparsers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("required "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),t._v("\n    \n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 4.根据 dag_parser 参数的值，选择要添加的命令字典。如果 dag_parser 为 True，则使用 DAG_CLI_DICT，否则使用 ALL_COMMANDS_DICT。")]),t._v("\n    command_dict "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" DAG_CLI_DICT "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" dag_parser "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),t._v(" ALL_COMMANDS_DICT\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" _"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" sub "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("sorted")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("command_dict"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("items"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 5.遍历命令字典，将每个命令添加到子解析器中。这是通过调用 _add_command 函数完成的，它将命令的名称、帮助文本、参数等信息添加到子解析器中。")]),t._v("\n        _add_command"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("subparsers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" sub"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 6.返回创建好的解析器实例。")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" parser\n")])])]),s("p",[t._v("接下来展开分析scheduler命令。")]),t._v(" "),s("h4",{attrs:{id:"scheduler命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#scheduler命令"}},[t._v("#")]),t._v(" scheduler命令")]),t._v(" "),s("p",[t._v("下面这段代码定义了一个名为 "),s("code",[t._v("core_commands")]),t._v(" 的列表，其中包含了 Airflow 命令行工具的核心命令。这些命令是通过 "),s("code",[t._v("CLICommand")]),t._v(" 类的实例表示的。在这个例子中，我们重点关注 "),s("code",[t._v("scheduler")]),t._v(" 命令。")]),t._v(" "),s("p",[s("code",[t._v("scheduler")]),t._v(" 命令的定义如下：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("name")]),t._v(': 命令的名称，这里为 "scheduler"。')]),t._v(" "),s("li",[s("code",[t._v("help")]),t._v(': 命令的帮助文本，用于描述命令的功能。这里为 "Start a scheduler instance"。')]),t._v(" "),s("li",[s("code",[t._v("func")]),t._v(": 命令的实际执行函数。这里使用 "),s("code",[t._v("lazy_load_command")]),t._v(" 函数导入 "),s("code",[t._v("scheduler_command.scheduler")]),t._v(" 函数。"),s("code",[t._v("lazy_load_command")]),t._v(" 用于在实际需要时才导入命令的执行函数，以减少启动时间。")]),t._v(" "),s("li",[s("code",[t._v("args")]),t._v(": 命令支持的命令行参数。这里包括了一系列预定义的参数，如 "),s("code",[t._v("ARG_SUBDIR")]),t._v("（DAG 子目录）、"),s("code",[t._v("ARG_NUM_RUNS")]),t._v("（调度器运行次数）等。")]),t._v(" "),s("li",[s("code",[t._v("epilog")]),t._v(": 命令的附加帮助信息，用于在命令帮助文本的末尾显示。这里包含了关于 "),s("code",[t._v("scheduler")]),t._v(" 命令支持的信号（如 "),s("code",[t._v("SIGUSR2")]),t._v("）的说明。")])]),t._v(" "),s("p",[t._v("这个列表中的其他命令也采用类似的结构进行定义。最终，这些命令将被添加到命令行参数解析器中，以便用户在运行 Airflow 命令行工具时可以使用它们。")]),t._v(" "),s("p",[t._v("文件路径：airflow/airflow/cli/cli_config.py")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("core_commands"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("list")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("CLICommand"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n  ActionCommand"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n          name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"scheduler"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("help")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Start a scheduler instance"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n          func"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("lazy_load_command"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"airflow.cli.commands.scheduler_command.scheduler"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n          args"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n              ARG_SUBDIR"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n              ARG_NUM_RUNS"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n              ARG_DO_PICKLE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n              ARG_PID"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n              ARG_DAEMON"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n              ARG_STDOUT"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n              ARG_STDERR"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n              ARG_LOG_FILE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n              ARG_SKIP_SERVE_LOGS"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n              ARG_VERBOSE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n          epilog"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n              "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Signals:\\n"')]),t._v("\n              "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"\\n"')]),t._v("\n              "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"  - SIGUSR2: Dump a snapshot of task state being tracked by the executor.\\n"')]),t._v("\n              "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"\\n"')]),t._v("\n              "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"    Example:\\n"')]),t._v("\n              "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'        pkill -f -USR2 \"airflow scheduler\"'")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),s("p",[t._v("我们可以通过如下的命令开启守护进程启动scheduler服务")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("airflow scheduler -D\n")])])]),s("p",[t._v("接下来看看这个被调用的scheduler方法。")]),t._v(" "),s("h4",{attrs:{id:"scheduler函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#scheduler函数"}},[t._v("#")]),t._v(" scheduler函数")]),t._v(" "),s("p",[s("code",[t._v("scheduler")]),t._v(" 函数的主要目的是通过调用 "),s("code",[t._v("run_command_with_daemon_option")]),t._v(" 函数来启动 Airflow 调度器。")]),t._v(" "),s("p",[t._v("以下是该函数的功能说明：")]),t._v(" "),s("p",[t._v("文件路径：airflow/airflow/cli/commands/scheduler_command.py")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("scheduler")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Namespace"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[t._v('"""Start Airflow Scheduler."""')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("settings"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("HEADER"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 启动调度器作业")]),t._v("\n    run_command_with_daemon_option"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n        args"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 命令行参数")]),t._v("\n        process_name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"scheduler"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# 进程名称，设置为 "scheduler"')]),t._v("\n        callback"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("lambda")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" _run_scheduler_job"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 启动调度器作业的回调函数，这里使用 _run_scheduler_job(args)")]),t._v("\n        should_setup_logging"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 是否设置日志记录，设置为 True。")]),t._v("\n")])])]),s("p",[t._v("接下来展开分析_run_scheduler_job函数。")]),t._v(" "),s("h4",{attrs:{id:"run-scheduler-job函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#run-scheduler-job函数"}},[t._v("#")]),t._v(" _run_scheduler_job函数")]),t._v(" "),s("p",[t._v("创建SchedulerJob对象，并调用该对象的_execute方法。Airflow就是通过调用_execute方法来启动scheduler调度服务。")]),t._v(" "),s("p",[s("code",[t._v("_run_scheduler_job")]),t._v(" 函数的主要目的是创建并运行一个调度器作业，启动日志服务和健康检查服务。")]),t._v(" "),s("p",[t._v("以下是该函数的功能说明：")]),t._v(" "),s("p",[t._v("文件路径：airflow/airflow/cli/commands/scheduler_command.py")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("_run_scheduler_job")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 1.创建一个 SchedulerJobRunner 实例，设置相关参数，如DAG目录（subdir）、最大运行次数（num_runs）和是否进行pickle序列化（do_pickle）。")]),t._v("\n    job_runner "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" SchedulerJobRunner"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n        job"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("Job"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" subdir"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("process_subdir"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("subdir"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" num_runs"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("num_runs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" do_pickle"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("do_pickle\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    \n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 2.验证执行器与数据库的兼容性。")]),t._v("\n    ExecutorLoader"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("validate_database_executor_compatibility"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("job_runner"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("job"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("executor"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    \n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 3.强制使用直接访问数据库的方式。")]),t._v("\n    InternalApiConfig"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("force_database_direct_access"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    \n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 4.从配置文件中获取调度器的健康检查设置（enable_health_check）。")]),t._v("\n    enable_health_check "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" conf"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("getboolean"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"scheduler"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ENABLE_HEALTH_CHECK"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    \n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 5.使用上下文管理器 _serve_logs 和 _serve_health_check 启动日志服务和健康检查服务。")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("with")]),t._v(" _serve_logs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("skip_serve_logs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" _serve_health_check"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("enable_health_check"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 6.尝试运行调度器作业，将 job_runner._execute 作为执行方法传递给 run_job 函数。")]),t._v("\n            run_job"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("job"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("job_runner"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("job"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" execute_callable"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("job_runner"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_execute"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("except")]),t._v(" Exception"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 7.如果在运行调度器作业过程中发生异常，记录异常信息。")]),t._v("\n            log"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exception"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Exception when running scheduler job"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("这里我们看到该函数通过传递_execute函数来运行调度器进行作业，下面我们继续展开这个函数进行分析。")]),t._v(" "),s("h4",{attrs:{id:"schedulerjobrunner-execute"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#schedulerjobrunner-execute"}},[t._v("#")]),t._v(" SchedulerJobRunner._execute")]),t._v(" "),s("p",[t._v("它是 Airflow 调度器的核心执行逻辑，包括启动执行器、处理器代理，以及执行调度器循环。")]),t._v(" "),s("p",[t._v("以下是具体的步骤：")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("从 "),s("code",[t._v("DagFileProcessorAgent")]),t._v(" 类导入 Dag 文件处理器代理。")])]),t._v(" "),s("li",[s("p",[t._v("导入默认执行器类，这里默认使用的是SequentialExecutor。")])]),t._v(" "),s("li",[s("p",[t._v("判断是否需要对 DAGs 进行序列化（pickling），以便某些执行器更容易地进行远程执行。")])]),t._v(" "),s("li",[s("p",[t._v("当使用 SQLite 时，不使用异步模式，以避免调度器工作进程和 DAG 解析器同时访问数据库。")])]),t._v(" "),s("li",[s("p",[t._v("设置 DAG 文件处理器超时时间。")])]),t._v(" "),s("li",[s("p",[t._v("如果没有使用独立的 DAG 处理器并且没有处理器代理，创建一个 "),s("code",[t._v("DagFileProcessorAgent")]),t._v(" 实例。")])]),t._v(" "),s("li",[s("p",[t._v("尝试执行以下操作：")]),t._v(" "),s("p",[t._v("a. 设置执行器的 job ID。")]),t._v(" "),s("p",[t._v("b. 根据是否使用处理器代理，设置执行器的回调接收器（callback sink）。")]),t._v(" "),s("p",[t._v("c. 启动执行器。")]),t._v(" "),s("p",[t._v("d. 注册信号处理器。")]),t._v(" "),s("p",[t._v("e. 如果使用处理器代理，启动处理器代理。")]),t._v(" "),s("p",[t._v("f. 记录调度器循环的开始时间。")]),t._v(" "),s("p",[t._v("g. 执行调度器循环（"),s("code",[t._v("_run_scheduler_loop")]),t._v(" 方法）。")]),t._v(" "),s("p",[t._v("h. 如果使用处理器代理，停止处理器代理。")]),t._v(" "),s("p",[t._v("i. 如果所有文件都已处理，停用自调度器循环开始以来未被触及的 DAG，因为它们可能已被删除。")]),t._v(" "),s("p",[t._v("j. 移除数据库会话。")])]),t._v(" "),s("li",[s("p",[t._v("如果在执行过程中发生异常，记录异常日志并抛出异常。")])]),t._v(" "),s("li",[s("p",[t._v("在 finally 语句中，尝试结束执行器和处理器代理，并记录日志表示已退出执行循环。")])])]),t._v(" "),s("p",[t._v("这个方法的返回值为 "),s("code",[t._v("None")]),t._v("。")]),t._v(" "),s("p",[t._v("文件路径：airflow/airflow/jobs/scheduler_job_runner.py")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("_execute")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" airflow"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dag_processing"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("manager "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" DagFileProcessorAgent\n\n    self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("log"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("info"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Starting the scheduler"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    executor_class"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" _ "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ExecutorLoader"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("import_default_executor_cls"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    pickle_dags "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("do_pickle "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("and")]),t._v(" executor_class"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("supports_pickling\n\n    self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("log"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("info"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Processing each file at most %s times"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("num_times_parse_dags"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    async_mode "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("not")]),t._v(" self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("using_sqlite\n\n    processor_timeout_seconds"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" conf"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("getint"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"core"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"dag_file_processor_timeout"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    processor_timeout "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" timedelta"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("seconds"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("processor_timeout_seconds"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("not")]),t._v(" self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_standalone_dag_processor "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("and")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("not")]),t._v(" self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("processor_agent"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("processor_agent "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" DagFileProcessorAgent"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n            dag_directory"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("Path"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("subdir"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            max_runs"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("num_times_parse_dags"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            processor_timeout"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("processor_timeout"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            dag_ids"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            pickle_dags"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("pickle_dags"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            async_mode"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("async_mode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("job"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("executor"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("job_id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("job"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("id")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("processor_agent"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("log"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("debug"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Using PipeCallbackSink as callback sink."')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("job"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("executor"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("callback_sink "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" PipeCallbackSink"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n                get_sink_pipe"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("processor_agent"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get_callbacks_pipe\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" airflow"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("callbacks"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("database_callback_sink "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" DatabaseCallbackSink\n\n            self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("log"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("debug"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Using DatabaseCallbackSink as callback sink."')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("job"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("executor"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("callback_sink "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" DatabaseCallbackSink"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n        self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("job"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("executor"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("start"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n        self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("register_signals"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("processor_agent"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("processor_agent"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("start"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n        execute_start_time "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" timezone"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("utcnow"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n        self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_run_scheduler_loop"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("processor_agent"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("processor_agent"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("terminate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("processor_agent"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("all_files_processed"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("log"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("info"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n                    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Deactivating DAGs that haven\'t been touched since %s"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" execute_start_time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("isoformat"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                DAG"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("deactivate_stale_dags"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("execute_start_time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n        settings"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Session"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("remove"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# type: ignore")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("except")]),t._v(" Exception"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("log"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exception"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Exception when executing SchedulerJob._run_scheduler_loop"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("raise")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("finally")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("job"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("executor"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("end"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("except")]),t._v(" Exception"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("log"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exception"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Exception when executing Executor.end"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("processor_agent"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("processor_agent"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("end"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("except")]),t._v(" Exception"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("log"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exception"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Exception when executing DagFileProcessorAgent.end"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("log"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("info"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Exited execute loop"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),t._v("\n")])])]),s("p",[t._v("在这个方法中有3个关键的操作：")]),t._v(" "),s("ul",[s("li",[s("p",[s("code",[t._v("self.job.executor.start()")]),t._v("： 它调用执行器的 "),s("code",[t._v("start")]),t._v(" 方法，执行器是负责执行任务的组件。在调度器启动时，执行器需要初始化相关资源，如线程、进程或其他分布式资源。具体的实现取决于所使用的执行器类型（如 "),s("code",[t._v("SequentialExecutor")]),t._v("，"),s("code",[t._v("LocalExecutor")]),t._v(", "),s("code",[t._v("CeleryExecutor")]),t._v(" 等）。")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("self.processor_agent.start()")]),t._v("： 这个方法调用 "),s("code",[t._v("DagFileProcessorAgent")]),t._v(" 的 "),s("code",[t._v("start")]),t._v(" 方法。"),s("code",[t._v("DagFileProcessorAgent")]),t._v(" 是负责解析和处理 DAG 文件的组件。它在后台运行，周期性地扫描 DAG 文件目录，解析找到的 DAG 文件并将其更新到数据库中。调用 "),s("code",[t._v("start")]),t._v(" 方法会启动 DAG 文件处理器代理，使其开始工作。")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("self._run_scheduler_loop()")]),t._v("： 这个方法是调度器的核心循环，负责处理和调度任务。在这个循环中，调度器会根据任务的依赖关系和状态来决定哪些任务可以执行。然后，它会将这些任务添加到executor的队列中。此外，调度器还会检查已完成的任务并更新它们的状态。这个循环会一直运行，直到调度器被停止。")])])]),t._v(" "),s("h3",{attrs:{id:"_2、dag定义和任务依赖定义"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、dag定义和任务依赖定义"}},[t._v("#")]),t._v(" 2、DAG定义和任务依赖定义")]),t._v(" "),s("p",[t._v("首先，在文件中定义DAG和任务，然后定义任务之间的依赖关系。前面我们介绍了Dag的定义，下面来介绍依赖关系的定义。")]),t._v(" "),s("p",[t._v("在Airflow中，"),s("code",[t._v("chain")]),t._v("函数、位移操作符"),s("code",[t._v(">>")]),t._v("或"),s("code",[t._v("<<")]),t._v("以及"),s("code",[t._v("set_upstream")]),t._v("和"),s("code",[t._v("set_downstream")]),t._v("方法都可以用于设置任务之间的依赖关系。它们在使用方式和适用场景上有一些区别：")]),t._v(" "),s("ol",[s("li",[s("code",[t._v("chain")]),t._v("函数：这个函数可以接受任意数量的任务作为参数，并在这些任务之间建立一条依赖链。这个函数的一个优点是可以接受任务列表作为参数，这使得可以在多个任务之间建立复杂的依赖关系。例如，"),s("code",[t._v("chain(t1, [t2, t3], t4)")]),t._v("将会创建以下的依赖关系："),s("code",[t._v("t1 -> t2 -> t4")]),t._v("和"),s("code",[t._v("t1 -> t3 -> t4")]),t._v("。")]),t._v(" "),s("li",[t._v("位移操作符"),s("code",[t._v(">>")]),t._v("或"),s("code",[t._v("<<")]),t._v("：这些操作符可以用于设置两个任务之间的依赖关系。例如，"),s("code",[t._v("t1 >> t2")]),t._v("或"),s("code",[t._v("t2 << t1")]),t._v("都表示"),s("code",[t._v("t1")]),t._v("任务执行完后执行"),s("code",[t._v("t2")]),t._v("任务。这种方式的一个优点是语法简洁，易于阅读和理解。但是，它只能用于设置两个任务之间的依赖关系，如果需要设置多个任务之间的依赖关系，就需要多次使用这些操作符，例如："),s("code",[t._v("t1 >> t2 >> t3 >> t4")]),t._v("。")]),t._v(" "),s("li",[s("code",[t._v("set_upstream")]),t._v("和"),s("code",[t._v("set_downstream")]),t._v("方法：这些方法可以用于设置两个任务之间的上游和下游依赖关系。例如，"),s("code",[t._v("t1.set_downstream(t2)")]),t._v("表示在"),s("code",[t._v("t1")]),t._v("任务执行完后执行"),s("code",[t._v("t2")]),t._v("任务，而"),s("code",[t._v("t2.set_upstream(t1)")]),t._v("表示在"),s("code",[t._v("t2")]),t._v("任务执行前执行"),s("code",[t._v("t1")]),t._v("任务。这种方式的一个优点是可以明确地设置任务之间的依赖关系，但它相对比较繁琐，尤其是在设置多个任务之间的依赖关系时。")])]),t._v(" "),s("p",[t._v("例如下面的例子：")]),t._v(" "),s("p",[t._v("op1 -> op2依赖关系的三种写法：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("op1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" op2\nop1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("set_downstream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("op2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nchain"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("op1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" op2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("op2 <- op1依赖关系的三种写法：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("op2 << op1\nop2.set_upstream(op1)\nchain(op1, op2)\n")])])]),s("p",[t._v("总的来说，"),s("code",[t._v("chain")]),t._v("函数、位移操作符"),s("code",[t._v(">>")]),t._v("或"),s("code",[t._v("<<")]),t._v("以及"),s("code",[t._v("set_upstream")]),t._v("和"),s("code",[t._v("set_downstream")]),t._v("方法在设置任务依赖关系时都有各自的优点和适用场景，可以根据实际需要选择使用。")]),t._v(" "),s("ul",[s("li",[t._v("官方文档：https://github.com/apache/airflow/blob/1a9b71a1298da76fc254f670e1032fa12131901a/docs/apache-airflow/core-concepts/dags.rst#L128")])]),t._v(" "),s("h4",{attrs:{id:"chain的四种使用方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#chain的四种使用方法"}},[t._v("#")]),t._v(" chain的四种使用方法")]),t._v(" "),s("p",[t._v("路径：airflow/models/taskmixin.py")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DependencyMixin")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[t._v('"""Mixing implementing common dependency setting methods like >> and <<."""')]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token decorator annotation punctuation"}},[t._v("@abstractmethod")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("set_upstream")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n        self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" other"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" DependencyMixin "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Sequence"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("DependencyMixin"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" edge_modifier"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" EdgeModifier "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[t._v('"""Set a task or a task list to be directly upstream from the current task."""')]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("raise")]),t._v(" NotImplementedError"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token decorator annotation punctuation"}},[t._v("@abstractmethod")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("set_downstream")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n        self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" other"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" DependencyMixin "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Sequence"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("DependencyMixin"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" edge_modifier"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" EdgeModifier "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[t._v('"""Set a task or a task list to be directly downstream from the current task."""')]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("raise")]),t._v(" NotImplementedError"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n     \n")])])]),s("p",[t._v("chain方法通过调用上述两个方法来实现依赖关系的设置，目前chain方法支持下面四种用法：")]),t._v(" "),s("blockquote",[s("p",[t._v("使用Operators/Sensors：")])]),t._v(" "),s("p",[t._v("例如要表达下面的依赖关系：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("  / -> t2 -> t4 \\\nt1               -> t6\n  \\ -> t3 -> t5 /\n")])])]),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("chain"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("t1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("t2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" t3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("t4"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" t5"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" t6"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 等价于")]),t._v("\n\nt1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("set_downstream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("t2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nt1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("set_downstream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("t3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nt2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("set_downstream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("t4"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nt3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("set_downstream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("t5"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nt4"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("set_downstream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("t6"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nt5"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("set_downstream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("t6"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("blockquote",[s("p",[t._v("使用任务修饰函数又名 XComArgs")])]),t._v(" "),s("p",[t._v("例如要表达下面的依赖关系：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("  / -> t2 -> t4 \\\nt1               -> t6\n  \\ -> t3 -> t5 /\n")])])]),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("chain"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("x2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" x3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("x4"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" x5"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" x6"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 等价于：")]),t._v("\n\nx1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" x1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nx2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" x2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nx3 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" x3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nx4 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" x4"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nx5 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" x5"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nx6 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" x6"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nx1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("set_downstream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nx1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("set_downstream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nx2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("set_downstream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x4"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nx3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("set_downstream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x5"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nx4"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("set_downstream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x6"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nx5"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("set_downstream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x6"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("blockquote",[s("p",[t._v("使用TaskGroups")])]),t._v(" "),s("p",[t._v("例如要表达下面的依赖关系：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("t1 -> task_group1 -> task_group2 -> t2\n")])])]),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("chain"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("t1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" task_group1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" task_group2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" t2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 等价于")]),t._v("\nt1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("set_downstream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("task_group1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ntask_group1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("set_downstream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("task_group2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ntask_group2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("set_downstream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("t2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("blockquote",[s("p",[t._v("也可以在Operators/Sensors、EdgeModifiers、XComArg 和 TaskGroups 之间进行混合")])]),t._v(" "),s("p",[t._v("例如要表达下面的依赖关系：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('  / "branch one" -> x1 \\\nt1                      -> task_group1 -> x3\n  \\ "branch two" -> x2 /\n')])])]),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[t._v("chain"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("t1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Label"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"branch one"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Label"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"branch two"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("x1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" x2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" task_group1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" x3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 等价于")]),t._v("\n\nx1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" x1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nx2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" x2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nx3 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" x3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nlabel1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Label"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"branch one"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nlabel2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Label"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"branch two"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nt1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("set_downstream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("label1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nlabel1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("set_downstream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nt2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("set_downstream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("label2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nlabel2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("set_downstream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nx1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("set_downstream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("task_group1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nx2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("set_downstream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("task_group1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ntask_group1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("set_downstream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h4",{attrs:{id:"chain源码剖析"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#chain源码剖析"}},[t._v("#")]),t._v(" chain源码剖析")]),t._v(" "),s("p",[t._v("该方法用于在给定的多个任务之间建立依赖关系链。它接受一个或多个任务、边缘修饰符、XComArgs 或 TaskGroups 作为参数，并在这些任务之间设置依赖关系。下面是函数的步骤：")]),t._v(" "),s("ol",[s("li",[t._v("使用 "),s("code",[t._v("zip")]),t._v(" 函数将任务列表与其自身的偏移版本配对，这样我们就可以在循环中同时处理上游任务和下游任务。")]),t._v(" "),s("li",[t._v("检查上游任务是否是 "),s("code",[t._v("DependencyMixin")]),t._v(" 类型。如果是，则为上游任务设置下游任务。然后继续下一个任务。")]),t._v(" "),s("li",[t._v("检查下游任务是否是 "),s("code",[t._v("DependencyMixin")]),t._v(" 类型。如果是，则为下游任务设置上游任务。然后继续下一个任务。")]),t._v(" "),s("li",[t._v("如果上游任务和下游任务都是 "),s("code",[t._v("Sequence")]),t._v(" 类型（如列表），则将它们分别赋值给 "),s("code",[t._v("up_task_list")]),t._v(" 和 "),s("code",[t._v("down_task_list")]),t._v("。然后检查这两个列表的长度是否相等。如果上游任务和下游任务列表的长度相等，则使用 "),s("code",[t._v("zip")]),t._v(" 函数将它们配对，并在循环中为每对任务设置上游和下游依赖关系。")])]),t._v(" "),s("p",[t._v("文件路径：airflow/models/baseoperator.py")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("chain")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("tasks"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" DependencyMixin "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Sequence"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("DependencyMixin"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[t._v('r"""\n    Given a number of tasks, builds a dependency chain.\n    \n    :param tasks: Individual and/or list of tasks, EdgeModifiers, XComArgs, or TaskGroups to set dependencies\n    """')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" up_task"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" down_task "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("zip")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tasks"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" tasks"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("isinstance")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("up_task"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" DependencyMixin"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            up_task"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("set_downstream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("down_task"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("continue")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("isinstance")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("down_task"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" DependencyMixin"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            down_task"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("set_upstream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("up_task"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("continue")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("not")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("isinstance")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("up_task"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Sequence"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("or")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("not")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("isinstance")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("down_task"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Sequence"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("raise")]),t._v(" TypeError"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string-interpolation"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('f"Chain not supported between instances of ')]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("up_task"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v(" and ")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("down_task"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        up_task_list "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" up_task\n        down_task_list "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" down_task\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("len")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("up_task_list"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("len")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("down_task_list"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("raise")]),t._v(" AirflowException"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token string-interpolation"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('f"Chain not supported for different length Iterable. "')])]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token string-interpolation"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('f"Got ')]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("len")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("up_task_list"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v(" and ")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("len")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("down_task_list"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('."')])]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" up_t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" down_t "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("zip")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("up_task_list"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" down_task_list"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            up_t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("set_downstream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("down_t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("下面我们通过airflow源码的官方example来了解其使用方法：")]),t._v(" "),s("p",[t._v("路径：airflow/tests/system/providers/amazon/aws/example_mongo_to_s3.py")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" __future__ "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" annotations\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" airflow"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("models"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("baseoperator "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" chain\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" airflow"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("models"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dag "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" DAG\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" airflow"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("providers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("amazon"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("aws"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("operators"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("s3 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" S3CreateBucketOperator"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" S3DeleteBucketOperator\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" airflow"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("providers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("amazon"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("aws"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("transfers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("mongo_to_s3 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" MongoToS3Operator\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" airflow"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("utils"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dates "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" datetime\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" airflow"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("utils"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("trigger_rule "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" TriggerRule\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" tests"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("system"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("providers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("amazon"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("aws"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("utils "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" SystemTestContextBuilder\n\nDAG_ID "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"example_mongo_to_s3"')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Externally fetched variables:")]),t._v("\nMONGO_DATABASE_KEY "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"MONGO_DATABASE"')]),t._v("\nMONGO_COLLECTION_KEY "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"MONGO_COLLECTION"')]),t._v("\n\nsys_test_context_task "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    SystemTestContextBuilder"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("add_variable"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("MONGO_DATABASE_KEY"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("add_variable"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("MONGO_COLLECTION_KEY"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("build"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("with")]),t._v(" DAG"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    DAG_ID"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    schedule"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"@once"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    start_date"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("datetime"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2021")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    catchup"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("False")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    tags"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"example"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" dag"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    test_context "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" sys_test_context_task"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    env_id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" test_context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ENV_ID"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    mongo_database "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" test_context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("MONGO_DATABASE_KEY"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    mongo_collection "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" test_context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("MONGO_COLLECTION_KEY"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n    s3_bucket "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string-interpolation"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('f"')]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("env_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('-mongo-to-s3-bucket"')])]),t._v("\n    s3_key "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string-interpolation"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('f"')]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("env_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('-mongo-to-s3-key"')])]),t._v("\n\n    create_s3_bucket "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" S3CreateBucketOperator"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("task_id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"create_s3_bucket"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" bucket_name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("s3_bucket"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# [START howto_transfer_mongo_to_s3]")]),t._v("\n    mongo_to_s3_job "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" MongoToS3Operator"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n        task_id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"mongo_to_s3_job"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        mongo_collection"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("mongo_collection"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Mongo query by matching values")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# Here returns all documents which have "OK" as value for the key "status"')]),t._v("\n        mongo_query"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"status"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"OK"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        s3_bucket"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("s3_bucket"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        s3_key"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("s3_key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        mongo_db"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("mongo_database"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        replace"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# [END howto_transfer_mongo_to_s3]")]),t._v("\n\n    delete_s3_bucket "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" S3DeleteBucketOperator"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n        task_id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"delete_s3_bucket"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        bucket_name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("s3_bucket"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        force_delete"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        trigger_rule"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("TriggerRule"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ALL_DONE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    chain"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# TEST SETUP")]),t._v("\n        test_context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        create_s3_bucket"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# TEST BODY")]),t._v("\n        mongo_to_s3_job"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# TEST TEARDOWN")]),t._v("\n        delete_s3_bucket"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" tests"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("system"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("utils"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("watcher "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" watcher\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# This test needs watcher in order to properly mark success/failure")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# when "tearDown" task with trigger rule is part of the DAG')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("list")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dag"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("tasks"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" watcher"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" tests"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("system"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("utils "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" get_test_run  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# noqa: E402")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Needed to run the example DAG with pytest (see: tests/system/README.md#run_via_pytest)")]),t._v("\ntest_run "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" get_test_run"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dag"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"_3、dag解析"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3、dag解析"}},[t._v("#")]),t._v(" 3、DAG解析")]),t._v(" "),s("p",[t._v("当Airflow启动时，Scheduler会解析DAG文件并将其添加到DAGBag中。这一过程涉及到"),s("code",[t._v("DAGBag.process_file")]),t._v("方法。")]),t._v(" "),s("p",[t._v("前面启动通过_execute启动调度器的同时，也通过"),s("code",[t._v("self.processor_agent.start()")]),t._v("方法创建DagFileProcessorAgent对象并调用start方法，start方法最终通过调用"),s("code",[t._v("DagBag.process_file")]),t._v("方法实现DAG解析。")]),t._v(" "),s("p",[t._v("下图是函数的调用链：")]),t._v(" "),s("p",[t._v("![image-20240321194827615](./img/4.2.2 dag解析函数调用链.png)")]),t._v(" "),s("p",[t._v("其中"),s("code",[t._v("DagBag")]),t._v(" 类是 Airflow 中的一个核心类，用于从指定的文件系统路径中加载、存储和管理有向无环图（DAG）对象。")]),t._v(" "),s("h4",{attrs:{id:"dagbag-process-file"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dagbag-process-file"}},[t._v("#")]),t._v(" DagBag.process_file")]),t._v(" "),s("p",[t._v("我们接着看 "),s("code",[t._v("DagBag")]),t._v(" 类的 "),s("code",[t._v("process_file")]),t._v(" 方法。它的作用是处理并加载指定的 DAG 定义文件。以下是该方法的分段解释：")]),t._v(" "),s("ol",[s("li",[t._v("首先，检查输入参数 "),s("code",[t._v("filepath")]),t._v(" 是否为 "),s("code",[t._v("None")]),t._v(" 或者对应的文件是否存在。如果文件不存在，则返回一个空列表。")]),t._v(" "),s("li",[t._v("尝试获取文件在磁盘上的最后修改时间。如果 "),s("code",[t._v("only_if_updated")]),t._v(" 参数为 "),s("code",[t._v("True")]),t._v("，并且文件已经在 "),s("code",[t._v("self.file_last_changed")]),t._v(" 字典中记录了最后修改时间，并且磁盘上的最后修改时间与记录的时间相同，则不需要重新加载此文件，直接返回一个空列表。这是为了避免不必要的重复加载。")]),t._v(" "),s("li",[t._v("在加载 DAG 定义文件之前，清除 "),s("code",[t._v("DagContext.autoregistered_dags")]),t._v("，以确保不会意外地捕获不需要的 DAG 对象。")]),t._v(" "),s("li",[t._v("根据文件类型（Python 文件或 ZIP 文件）调用不同的方法来加载模块。如果文件是以 "),s("code",[t._v(".py")]),t._v(" 结尾的 Python 文件，或者不是一个 ZIP 文件，则调用 "),s("code",[t._v("_load_modules_from_file")]),t._v(" 方法加载模块。如果文件是一个 ZIP 文件，则调用 "),s("code",[t._v("_load_modules_from_zip")]),t._v(" 方法加载模块。")]),t._v(" "),s("li",[t._v("调用 "),s("code",[t._v("_process_modules")]),t._v(" 方法处理加载的模块，并获取找到的 DAG 对象列表 "),s("code",[t._v("found_dags")]),t._v("。这个方法会遍历模块中的所有对象，查找类型为 "),s("code",[t._v("DAG")]),t._v(" 的对象，并将它们添加到 "),s("code",[t._v("DagBag")]),t._v(" 实例中。")]),t._v(" "),s("li",[t._v("更新 "),s("code",[t._v("self.file_last_changed")]),t._v(" 字典，将文件的最后修改时间记录在其中。")]),t._v(" "),s("li",[t._v("返回找到的 DAG 对象列表 "),s("code",[t._v("found_dags")]),t._v("。")])]),t._v(" "),s("p",[t._v("文件路径：airflow/models/dagbag.py")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("process_file")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" filepath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" only_if_updated"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" safe_mode"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[t._v('"""Given a path to a python module or zip file, import the module and look for dag objects within."""')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" airflow"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("models"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dag "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" DagContext\n\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" filepath "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("is")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("or")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("not")]),t._v(" os"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("path"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("isfile"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("filepath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        file_last_changed_on_disk "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" datetime"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("fromtimestamp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("os"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("path"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("getmtime"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("filepath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n            only_if_updated\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("and")]),t._v(" filepath "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("file_last_changed\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("and")]),t._v(" file_last_changed_on_disk "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("file_last_changed"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("filepath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("except")]),t._v(" Exception "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("log"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exception"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n    DagContext"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("autoregistered_dags"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("clear"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" filepath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("endswith"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('".py"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("or")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("not")]),t._v(" zipfile"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("is_zipfile"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("filepath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        mods "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_load_modules_from_file"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("filepath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" safe_mode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        mods "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_load_modules_from_zip"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("filepath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" safe_mode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    found_dags "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_process_modules"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("filepath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" mods"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" file_last_changed_on_disk"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("file_last_changed"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("filepath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" file_last_changed_on_disk\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" found_dags\n")])])]),s("p",[t._v("我们看到，process_file其中调用了_load_modules_from_file方法来从本地文件加载DAG进来的，下面我们分析其加载过程。")]),t._v(" "),s("h4",{attrs:{id:"dagbag-load-modules-from-file"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dagbag-load-modules-from-file"}},[t._v("#")]),t._v(" DagBag._load_modules_from_file")]),t._v(" "),s("p",[t._v("这个函数 "),s("code",[t._v("_load_modules_from_file")]),t._v(" 主要用于从给定的 Python 文件路径中加载模块。它首先检查文件是否可能包含 DAG 对象，然后使用 "),s("code",[t._v("importlib")]),t._v(" 库来加载文件，并处理可能发生的异常。同时，它还支持设置 DAG 导入超时，以防止加载过程耗时过长。")]),t._v(" "),s("p",[t._v("也就是说这部分函数代码是将DAG的定义进行解析的重要环节，解析完以后才可以给调度器进行调度。")]),t._v(" "),s("p",[t._v("以下是该方法的代码步骤：")]),t._v(" "),s("ol",[s("li",[t._v("导入 "),s("code",[t._v("DagContext")]),t._v(" 类。")]),t._v(" "),s("li",[t._v("使用 "),s("code",[t._v("might_contain_dag")]),t._v(" 函数检查文件是否可能包含 DAG 对象。如果不包含 DAG 对象，那么就不需要解析这个文件，直接返回一个空列表。如果这是首次跳过文件，记录一条跳过的日志信息。")]),t._v(" "),s("li",[t._v("使用 "),s("code",[t._v("get_unique_dag_module_name")]),t._v(" 函数为文件生成一个唯一的模块名。")]),t._v(" "),s("li",[t._v("如果生成的模块名已经在 "),s("code",[t._v("sys.modules")]),t._v(" 中，则删除它，以便重新加载。")]),t._v(" "),s("li",[t._v("设置 "),s("code",[t._v("DagContext.current_autoregister_module_name")]),t._v(" 为生成的模块名。")]),t._v(" "),s("li",[t._v("定义一个名为 "),s("code",[t._v("parse")]),t._v(" 的内部函数，用于实际加载和解析文件。这个函数使用 "),s("code",[t._v("importlib")]),t._v(" 库来加载文件。")]),t._v(" "),s("li",[t._v("获取 DAG 定义文件的导入超时设置。如果 "),s("code",[t._v("dagbag_import_timeout")]),t._v(" 不是整数或浮点数，抛出 "),s("code",[t._v("TypeError")]),t._v(" 异常。")]),t._v(" "),s("li",[t._v("如果 "),s("code",[t._v("dagbag_import_timeout")]),t._v(" 小于等于 0，表示没有设置导入超时，直接调用 "),s("code",[t._v("parse")]),t._v(" 函数加载和解析文件。")]),t._v(" "),s("li",[t._v("如果设置了导入超时，使用 "),s("code",[t._v("timeout")]),t._v(" 上下文管理器来限制 "),s("code",[t._v("parse")]),t._v(" 函数的执行时间。如果超时，将抛出一个包含建议如何优化 DAG 导入时间的异常信息。")])]),t._v(" "),s("p",[t._v("文件路径：airflow/models/dagbag.py")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("_load_modules_from_file")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" filepath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" safe_mode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" airflow"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("models"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dag "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" DagContext\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("not")]),t._v(" might_contain_dag"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("filepath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" safe_mode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("not")]),t._v(" self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("has_logged"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("has_logged "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),t._v("\n            self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("log"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("info"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"File %s assumed to contain no DAGs. Skipping."')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" filepath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n    self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("log"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("debug"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Importing %s"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" filepath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    mod_name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" get_unique_dag_module_name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("filepath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" mod_name "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" sys"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("modules"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("del")]),t._v(" sys"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("modules"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("mod_name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n    DagContext"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("current_autoregister_module_name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" mod_name\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("parse")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mod_name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" filepath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            loader "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" importlib"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("machinery"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("SourceFileLoader"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mod_name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" filepath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            spec "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" importlib"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("util"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("spec_from_loader"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mod_name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" loader"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            new_module "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" importlib"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("util"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("module_from_spec"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("spec"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            sys"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("modules"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("spec"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" new_module\n            loader"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exec_module"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("new_module"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("new_module"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("except")]),t._v(" Exception "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            DagContext"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("autoregistered_dags"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("clear"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("log"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exception"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Failed to import: %s"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" filepath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dagbag_import_error_tracebacks"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("import_errors"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("filepath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" traceback"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("format_exc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n                    limit"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dagbag_import_error_traceback_depth\n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("import_errors"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("filepath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("str")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n    dagbag_import_timeout "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" settings"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get_dagbag_import_timeout"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("filepath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("not")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("isinstance")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dagbag_import_timeout"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("float")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("raise")]),t._v(" TypeError"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token string-interpolation"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('f"Value (')]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("dagbag_import_timeout"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v(') from get_dagbag_import_timeout must be int or float"')])]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" dagbag_import_timeout "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# no parsing timeout")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" parse"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mod_name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" filepath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    timeout_msg "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token string-interpolation"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('f"DagBag import timeout for ')]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("filepath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v(" after ")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("dagbag_import_timeout"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('s.\\n"')])]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Please take a look at these docs to improve your DAG import time:\\n"')]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token string-interpolation"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('f"* ')]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("get_docs_url"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'best-practices.html#top-level-python-code'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('\\n"')])]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token string-interpolation"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('f"* ')]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("get_docs_url"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'best-practices.html#reducing-dag-complexity'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"')])]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("with")]),t._v(" timeout"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dagbag_import_timeout"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" error_message"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("timeout_msg"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" parse"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("mod_name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" filepath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),s("p",[t._v("_load_modules_from_zip原理跟该方法类似，这里就不重复展开介绍。")]),t._v(" "),s("h4",{attrs:{id:"dagbag-parse"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dagbag-parse"}},[t._v("#")]),t._v(" DagBag.parse")]),t._v(" "),s("p",[t._v("前面"),s("code",[t._v("parse")]),t._v(" 函数尝试从给定的文件路径导入 DAG 模块。如果导入成功，它将返回一个包含新导入模块的列表。这个新模块可能包含以下数据：")]),t._v(" "),s("ol",[s("li",[t._v("DAG 定义：DAG 模块中定义的 DAG 对象，用于表示工作流的依赖关系。DAG 对象通常使用 "),s("code",[t._v("airflow.models.DAG")]),t._v(" 类实例化，并设置相关参数，如 "),s("code",[t._v("dag_id")]),t._v("、"),s("code",[t._v("schedule_interval")]),t._v(" 等。")]),t._v(" "),s("li",[t._v("任务定义：在 DAG 模块中，任务是使用 "),s("code",[t._v("airflow.operators")]),t._v(" 中的各种运算符（如 "),s("code",[t._v("PythonOperator")]),t._v("、"),s("code",[t._v("BashOperator")]),t._v(" 等）创建的。任务定义了要在工作流中执行的具体操作，并通过 "),s("code",[t._v("set_upstream")]),t._v(" 和 "),s("code",[t._v("set_downstream")]),t._v(" 方法指定它们之间的依赖关系。")]),t._v(" "),s("li",[t._v("变量和函数：DAG 模块中可能还包含一些辅助变量和函数，用于在任务执行过程中实现特定的逻辑或处理数据。")]),t._v(" "),s("li",[t._v("钩子（Hooks）和连接（Connections）：DAG 模块可能还包含钩子和连接的定义，用于与外部系统（如数据库、API 等）进行交互。")]),t._v(" "),s("li",[t._v("导入的其他模块和库：DAG 模块可能还需要导入其他 Python 模块或库，以便在任务执行过程中使用。")])]),t._v(" "),s("p",[t._v("请注意，"),s("code",[t._v("parse")]),t._v(" 函数只负责导入 DAG 模块，并不会执行其中的任务。任务的执行由 Airflow 调度器根据 DAG 的调度设置进行。")]),t._v(" "),s("p",[t._v("也就是说，在导入Dag文件的同时，里面涉及到的Operator都会被创建对象，即调用BaseOperator的__init__初始化方法创建对象。")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 创建DAG实例")]),t._v("\ndag "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" DAG"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    dag_id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'my_example_dag'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    default_args"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("dag_args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    description"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'A simple example DAG'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    schedule_interval"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("timedelta"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("days"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 定义任务")]),t._v("\ntask_1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" DummyOperator"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    task_id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'task_1'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    dag"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("dag"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n")])])]),s("p",[t._v("当接下来执行到设置上下游依赖关系是，即：")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\ntask1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v(" task2\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 或")]),t._v("\nchain"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("task1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" task2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 或")]),t._v("\ntask1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("set_downstream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("task2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\ntask2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("set_upstream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("task1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n")])])]),s("p",[t._v("就会调用前面我们介绍的set_downstream和set_upstream方法设置DagRun中任务的依赖关系。")]),t._v(" "),s("p",[t._v("下面是我们介绍重要的参数，这些参数都是在写DAG Python文件时大部分定义的。")]),t._v(" "),s("blockquote",[s("p",[t._v("任务标识和依赖关系：")])]),t._v(" "),s("ol",[s("li",[t._v("task_id：任务的唯一标识符。")]),t._v(" "),s("li",[t._v("dag：任务所属的 DAG 对象。")]),t._v(" "),s("li",[t._v("task_group：任务所属的任务组。")]),t._v(" "),s("li",[t._v("depends_on_past：任务是否取决于其过去的实例。")]),t._v(" "),s("li",[t._v("wait_for_downstream：是否等待下游任务完成。")]),t._v(" "),s("li",[t._v("trigger_rule：触发任务执行的规则。")])]),t._v(" "),s("blockquote",[s("p",[t._v("重试设置：")])]),t._v(" "),s("ol",[s("li",[t._v("retries：任务失败时的重试次数。")]),t._v(" "),s("li",[t._v("retry_delay：任务重试之间的时间间隔。")]),t._v(" "),s("li",[t._v("retry_exponential_backoff：是否在重试时使用指数退避策略。")]),t._v(" "),s("li",[t._v("max_retry_delay：重试之间的最大时间间隔。")])]),t._v(" "),s("blockquote",[s("p",[t._v("回调和钩子：")])]),t._v(" "),s("ol",[s("li",[t._v("on_execute_callback：任务执行时的回调函数。")]),t._v(" "),s("li",[t._v("on_failure_callback：任务失败时的回调函数。")]),t._v(" "),s("li",[t._v("on_success_callback：任务成功时的回调函数。")]),t._v(" "),s("li",[t._v("on_retry_callback：任务重试时的回调函数。")]),t._v(" "),s("li",[t._v("on_skipped_callback：任务跳过时的回调函数。")]),t._v(" "),s("li",[t._v("pre_execute：任务执行前的钩子函数。")]),t._v(" "),s("li",[t._v("post_execute：任务执行后的钩子函数。")])]),t._v(" "),s("blockquote",[s("p",[t._v("其他任务设置：")])]),t._v(" "),s("ol",[s("li",[t._v("params：传递给任务的参数。")]),t._v(" "),s("li",[t._v("default_args：任务的默认参数。")]),t._v(" "),s("li",[t._v("priority_weight：任务的优先级权重。")]),t._v(" "),s("li",[t._v("weight_rule：任务权重规则。")]),t._v(" "),s("li",[t._v("queue：任务所在的队列。")]),t._v(" "),s("li",[t._v("pool：任务所在的资源池。")]),t._v(" "),s("li",[t._v("pool_slots：任务在资源池中占用的插槽数。")]),t._v(" "),s("li",[t._v("sla：任务的服务级别协议（Service Level Agreement）。")]),t._v(" "),s("li",[t._v("resources：任务所需的资源。")]),t._v(" "),s("li",[t._v("run_as_user：运行任务的用户。")]),t._v(" "),s("li",[t._v("task_concurrency：任务的并发限制。")]),t._v(" "),s("li",[t._v("map_index_template：任务的映射索引模板。")]),t._v(" "),s("li",[t._v("max_active_tis_per_dag：每个 DAG 中允许的最大活动任务实例数。")]),t._v(" "),s("li",[t._v("max_active_tis_per_dagrun：每个 DAG 运行中允许的最大活动任务实例数。")]),t._v(" "),s("li",[t._v("executor_config：任务的执行器配置。")]),t._v(" "),s("li",[t._v("do_xcom_push：是否将任务的返回值推送到 XCom。")]),t._v(" "),s("li",[t._v("multiple_outputs：是否允许任务具有多个输出。")]),t._v(" "),s("li",[t._v("inlets：任务的上游数据源。")]),t._v(" "),s("li",[t._v("outlets：任务的下游数据目标。")])]),t._v(" "),s("p",[t._v("文件路径：airflow/airflow/models/baseoperator.py")]),t._v(" "),s("div",{staticClass:"language-py extra-class"},[s("pre",{pre:!0,attrs:{class:"language-py"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("__init__")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n        self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        task_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("str")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        owner"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("str")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" DEFAULT_OWNER"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        email"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("str")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" Iterable"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("str")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        email_on_retry"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bool")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" conf"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("getboolean"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"email"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"default_email_on_retry"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" fallback"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        email_on_failure"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bool")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" conf"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("getboolean"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"email"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"default_email_on_failure"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" fallback"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        retries"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" DEFAULT_RETRIES"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        retry_delay"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" timedelta "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("float")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" DEFAULT_RETRY_DELAY"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        retry_exponential_backoff"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bool")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("False")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        max_retry_delay"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" timedelta "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("float")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        start_date"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" datetime "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        end_date"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" datetime "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        depends_on_past"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bool")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("False")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        ignore_first_depends_on_past"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bool")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" DEFAULT_IGNORE_FIRST_DEPENDS_ON_PAST"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        wait_for_past_depends_before_skipping"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bool")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" DEFAULT_WAIT_FOR_PAST_DEPENDS_BEFORE_SKIPPING"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        wait_for_downstream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bool")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("False")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        dag"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" DAG "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        params"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" collections"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("abc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MutableMapping "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        default_args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("dict")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        priority_weight"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" DEFAULT_PRIORITY_WEIGHT"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        weight_rule"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("str")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" PriorityWeightStrategy "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" DEFAULT_WEIGHT_RULE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        queue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("str")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" DEFAULT_QUEUE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        pool"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("str")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        pool_slots"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" DEFAULT_POOL_SLOTS"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        sla"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" timedelta "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        execution_timeout"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" timedelta "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" DEFAULT_TASK_EXECUTION_TIMEOUT"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        on_execute_callback"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" TaskStateChangeCallback "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("list")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("TaskStateChangeCallback"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        on_failure_callback"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" TaskStateChangeCallback "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("list")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("TaskStateChangeCallback"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        on_success_callback"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" TaskStateChangeCallback "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("list")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("TaskStateChangeCallback"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        on_retry_callback"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" TaskStateChangeCallback "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("list")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("TaskStateChangeCallback"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        on_skipped_callback"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" TaskStateChangeCallback "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("list")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("TaskStateChangeCallback"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        pre_execute"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" TaskPreExecuteHook "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        post_execute"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" TaskPostExecuteHook "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        trigger_rule"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("str")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" DEFAULT_TRIGGER_RULE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        resources"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("dict")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("str")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Any"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        run_as_user"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("str")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        task_concurrency"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        map_index_template"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("str")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        max_active_tis_per_dag"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        max_active_tis_per_dagrun"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        executor_config"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("dict")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        do_xcom_push"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bool")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        multiple_outputs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bool")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("False")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        inlets"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Any "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        outlets"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Any "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        task_group"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" TaskGroup "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        doc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("str")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        doc_md"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("str")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        doc_json"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("str")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        doc_yaml"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("str")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        doc_rst"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("str")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        logger_name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("str")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        allow_nested_operators"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bool")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("kwargs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n")])])]),s("h4",{attrs:{id:"dagbag-process-modules"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dagbag-process-modules"}},[t._v("#")]),t._v(" DagBag._process_modules")]),t._v(" "),s("p",[t._v("从本地加载完DAG文件导入模块后，接下来调用 "),s("code",[t._v("_process_modules")]),t._v(" 方法处理加载的模块，并获取找到的 DAG 对象列表 "),s("code",[t._v("found_dags")]),t._v("。这个方法会遍历模块中的所有对象，查找类型为 "),s("code",[t._v("DAG")]),t._v(" 的对象，并将它们添加到 "),s("code",[t._v("DagBag")]),t._v(" 实例中。")]),t._v(" "),s("p",[t._v("以下是该方法的功能解释：")]),t._v(" "),s("ol",[s("li",[t._v("从 "),s("code",[t._v("airflow.models.dag")]),t._v(" 模块导入 "),s("code",[t._v("DAG")]),t._v(" 和 "),s("code",[t._v("DagContext")]),t._v(" 类，避免循环导入。")]),t._v(" "),s("li",[t._v("使用列表推导式遍历模块中的所有对象，找到类型为 "),s("code",[t._v("DAG")]),t._v(" 的对象，并将它们存储在 "),s("code",[t._v("top_level_dags")]),t._v(" 集合中。同时，将 "),s("code",[t._v("DagContext.autoregistered_dags")]),t._v(" 中的 DAG 也添加到 "),s("code",[t._v("top_level_dags")]),t._v(" 集合中。")]),t._v(" "),s("li",[t._v("重置 "),s("code",[t._v("DagContext.current_autoregister_module_name")]),t._v(" 为 "),s("code",[t._v("None")]),t._v("，并清空 "),s("code",[t._v("DagContext.autoregistered_dags")]),t._v("。")]),t._v(" "),s("li",[t._v("创建一个空列表 "),s("code",[t._v("found_dags")]),t._v("，用于存储找到的 DAG 对象。")]),t._v(" "),s("li",[t._v("遍历 "),s("code",[t._v("top_level_dags")]),t._v(" 集合中的 DAG 对象。为每个 DAG 对象设置 "),s("code",[t._v("fileloc")]),t._v(" 属性，该属性指向其所在的模块文件。")]),t._v(" "),s("li",[t._v("尝试验证 DAG 对象，并使用 "),s("code",[t._v("bag_dag")]),t._v(" 方法将其添加到 "),s("code",[t._v("DagBag")]),t._v(" 实例中。如果在这个过程中遇到 "),s("code",[t._v("AirflowClusterPolicySkipDag")]),t._v(" 异常，则跳过这个 DAG。如果遇到其他异常，记录异常信息，并将错误信息添加到 "),s("code",[t._v("self.import_errors")]),t._v(" 字典中，同时更新 "),s("code",[t._v("self.file_last_changed")]),t._v(" 字典。")]),t._v(" "),s("li",[t._v("如果没有发生异常，将 DAG 对象添加到 "),s("code",[t._v("found_dags")]),t._v(" 列表中，并将 DAG 的子 DAG 也添加到 "),s("code",[t._v("found_dags")]),t._v(" 列表中。")]),t._v(" "),s("li",[t._v("返回找到的 DAG 对象列表 "),s("code",[t._v("found_dags")]),t._v("。")])]),t._v(" "),s("p",[t._v("文件路径：airflow/models/dagbag.py")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("_process_modules")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" filepath"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" mods"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" file_last_changed_on_disk"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" airflow"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("models"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dag "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" DAG"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" DagContext \n\n      top_level_dags "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("o"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" m"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" m "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" mods "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" o "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" m"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__dict__"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("values"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("isinstance")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("o"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" DAG"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n      top_level_dags"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("update"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("DagContext"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("autoregistered_dags"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n      DagContext"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("current_autoregister_module_name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),t._v("\n      DagContext"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("autoregistered_dags"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("clear"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n      found_dags "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" dag"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" mod "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" top_level_dags"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          dag"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("fileloc "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" mod"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__file__\n          "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n              dag"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("validate"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n              self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("bag_dag"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dag"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("dag"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" root_dag"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("dag"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("except")]),t._v(" AirflowClusterPolicySkipDag"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n              "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("pass")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("except")]),t._v(" Exception "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n              self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("log"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exception"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Failed to bag_dag: %s"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" dag"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("fileloc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n              self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("import_errors"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("dag"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("fileloc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string-interpolation"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('f"')]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__name__"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v(": ")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"')])]),t._v("\n              self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("file_last_changed"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("dag"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("fileloc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" file_last_changed_on_disk\n          "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n              found_dags"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("append"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dag"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n              found_dags "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" dag"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("subdags\n      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" found_dags\n")])])]),s("h3",{attrs:{id:"_5、dag调度"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5、dag调度"}},[t._v("#")]),t._v(" 5、DAG调度")]),t._v(" "),s("h4",{attrs:{id:"schedulerjobrunner-run-scheduler-loop"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#schedulerjobrunner-run-scheduler-loop"}},[t._v("#")]),t._v(" SchedulerJobRunner._run_scheduler_loop")]),t._v(" "),s("p",[t._v("![image-20240321202848216](./img/4.2.2 DAG运行实例创建函数链.png)")]),t._v(" "),s("p",[t._v("该函数它实现了调度器的主要循环逻辑。调度器的主要任务是解析 DAG 文件、找到可执行的任务、将任务加入队列以及与执行器进行心跳。以下是该方法的步骤：")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("检查 "),s("code",[t._v("processor_agent")]),t._v(" 是否已经启动。如果没有启动，则抛出 "),s("code",[t._v("ValueError")]),t._v(" 异常。")])]),t._v(" "),s("li",[s("p",[t._v("初始化一个 "),s("code",[t._v("EventScheduler")]),t._v(" 对象，用于管理定时事件。")])]),t._v(" "),s("li",[s("p",[t._v("添加一系列定时事件，包括检查孤儿任务、检查触发器超时、发送池指标、检查僵尸任务、更新暂停 DAG 的状态、处理长时间处于队列中的任务等。")])]),t._v(" "),s("li",[s("p",[t._v("使用 "),s("code",[t._v("itertools.count")]),t._v(" 创建一个无限循环。在每次循环中执行以下操作：")]),t._v(" "),s("p",[t._v("a. 如果使用的是 SQLite 数据库，并且 "),s("code",[t._v("processor_agent")]),t._v(" 已启动，则运行单次解析循环，并等待解析器完成，以避免同时访问数据库。")]),t._v(" "),s("p",[t._v("b. 创建一个新的数据库会话，并调用 "),s("code",[t._v("_do_scheduling")]),t._v(" 方法执行调度任务。这个方法会找到可执行的任务实例，并将它们加入执行器的队列。")]),t._v(" "),s("p",[t._v("c. 调用执行器的 "),s("code",[t._v("heartbeat")]),t._v(" 方法，执行队列中的任务并同步运行中任务的状态。")]),t._v(" "),s("p",[t._v("d. 如果 "),s("code",[t._v("processor_agent")]),t._v(" 已启动，调用它的 "),s("code",[t._v("heartbeat")]),t._v(" 方法。")]),t._v(" "),s("p",[t._v("e. 定期执行调度器的心跳，以更新其状态。")]),t._v(" "),s("p",[t._v("f. 运行所有挂起的定时事件。")])]),t._v(" "),s("li",[s("p",[t._v("如果调度器处于空闲状态（即没有新的任务实例加入队列，也没有任务完成），则让调度器线程休眠一段时间，以减少 CPU 使用率。")])]),t._v(" "),s("li",[s("p",[t._v("如果达到了指定的调度循环次数或解析次数，退出循环。")])])]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("_run_scheduler_loop")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("not")]),t._v(" self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("processor_agent "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("and")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("not")]),t._v(" self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_standalone_dag_processor"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("raise")]),t._v(" ValueError"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Processor agent is not started."')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    is_unit_test"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bool")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" conf"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("getboolean"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"core"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"unit_test_mode"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    timers "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" EventScheduler"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("adopt_or_reset_orphaned_tasks"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    timers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("call_regular_interval"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n        conf"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("getfloat"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"scheduler"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"orphaned_tasks_check_interval"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" fallback"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("300.0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("adopt_or_reset_orphaned_tasks"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    timers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("call_regular_interval"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n        conf"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("getfloat"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"scheduler"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"trigger_timeout_check_interval"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" fallback"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("15.0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("check_trigger_timeouts"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    timers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("call_regular_interval"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n        conf"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("getfloat"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"scheduler"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"pool_metrics_interval"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" fallback"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("5.0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_emit_pool_metrics"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    timers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("call_regular_interval"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n        conf"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("getfloat"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"scheduler"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"zombie_detection_interval"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" fallback"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10.0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_find_zombies"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    timers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("call_regular_interval"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("60.0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_update_dag_run_state_for_paused_dags"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    timers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("call_regular_interval"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n        conf"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("getfloat"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"scheduler"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"task_queued_timeout_check_interval"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_fail_tasks_stuck_in_queued"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    timers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("call_regular_interval"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n        conf"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("getfloat"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"scheduler"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"parsing_cleanup_interval"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_orphan_unreferenced_datasets"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_standalone_dag_processor"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        timers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("call_regular_interval"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n            conf"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("getfloat"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"scheduler"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"parsing_cleanup_interval"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_cleanup_stale_dags"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" loop_count "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" itertools"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("count"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("start"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("with")]),t._v(" Stats"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("timer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"scheduler.scheduler_loop_duration"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" timer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("using_sqlite "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("and")]),t._v(" self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("processor_agent"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("processor_agent"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("run_single_parsing_loop"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("log"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("debug"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Waiting for processors to finish since we\'re using sqlite"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("processor_agent"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("wait_until_finished"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("with")]),t._v(" create_session"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" session"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                num_queued_tis "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_do_scheduling"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("session"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n                self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("job"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("executor"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("heartbeat"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                session"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("expunge_all"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                num_finished_events "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_process_executor_events"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("session"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("session"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("processor_agent"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("processor_agent"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("heartbeat"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n            perform_heartbeat"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n                job"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("job"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" heartbeat_callback"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("heartbeat_callback"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" only_if_necessary"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n            next_event "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" timers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("run"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("blocking"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("False")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("log"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("debug"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Next timed event is in %f"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" next_event"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n        self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("log"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("debug"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Ran scheduling loop in %.2f seconds"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" timer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("duration"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("not")]),t._v(" is_unit_test "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("and")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("not")]),t._v(" num_queued_tis "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("and")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("not")]),t._v(" num_finished_events"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sleep"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("min")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_scheduler_idle_sleep_time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" next_event "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("or")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" loop_count "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("num_runs "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("log"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("info"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Exiting scheduler loop as requested number of runs (%d - got to %d) has been reached"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("num_runs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                loop_count"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("processor_agent "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("and")]),t._v(" self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("processor_agent"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("done"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("log"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("info"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Exiting scheduler loop as requested DAG parse count (%d) has been reached after %d"')]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('" scheduler loops"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("num_times_parse_dags"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                loop_count"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),t._v("\n\n")])])]),s("h3",{attrs:{id:"_6、dagrun实例创建"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6、dagrun实例创建"}},[t._v("#")]),t._v(" 6、DAGRun实例创建")]),t._v(" "),s("h4",{attrs:{id:"schedulerjobrunner-create-dag-runs"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#schedulerjobrunner-create-dag-runs"}},[t._v("#")]),t._v(" SchedulerJobRunner._create_dag_runs")]),t._v(" "),s("p",[t._v("在调度循环中，Scheduler会根据DAG的调度间隔和触发规则创建DAG运行实例。这一过程涉及到``SchedulerJobRunner._create_dagruns_for_dags"),s("code",[t._v("和")]),t._v("SchedulerJobRunner._create_dag_runs`方法。")]),t._v(" "),s("p",[t._v("这两个方法的主要作用是为需要运行的 DAG 创建 DagRun 实例。")]),t._v(" "),s("ul",[s("li",[s("p",[s("code",[t._v("_create_dagruns_for_dags")]),t._v(" 方法首先调用 "),s("code",[t._v("DagModel.dags_needing_dagruns")]),t._v(" 方法找到需要创建 DagRun 的 DAG，然后将这些 DAG 分为两类：dataset 触发的 DAG 和非 dataset 触发的 DAG。然后，分别调用 "),s("code",[t._v("_create_dag_runs")]),t._v(" 和 "),s("code",[t._v("_create_dag_runs_dataset_triggered")]),t._v(" 方法为这两类 DAG 创建 DagRun。最后，提交数据库会话，释放对 "),s("code",[t._v("DagModel")]),t._v(" 表的写锁。")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("_create_dag_runs")]),t._v(" 方法为给定的 DAG 模型创建 DagRun 实例，并更新 DAG 模型的 "),s("code",[t._v("next_dagrun")]),t._v(" 和 "),s("code",[t._v("next_dagrun_create_after")]),t._v(" 字段以控制下一个 DagRun 的创建时间。首先，从数据库中获取已存在的 DagRun 实例，以避免创建重复的 DagRun。然后，获取每个 DAG 当前的活动运行数。接着，遍历每个 DAG 模型，获取对应的 DAG 实例，并为其创建一个新的 DagRun 实例。如果 DagRun 已存在或创建成功，更新 DAG 模型的 "),s("code",[t._v("next_dagrun")]),t._v(" 和 "),s("code",[t._v("next_dagrun_create_after")]),t._v(" 字段。如果在创建过程中发生异常，记录异常信息并继续处理下一个 DAG。")])])]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token decorator annotation punctuation"}},[t._v("@retry_db_transaction")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("_create_dagruns_for_dags")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" guard"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" CommitProhibitorGuard"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" session"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Session"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[t._v('"""Find Dag Models needing DagRuns and Create Dag Runs with retries in case of OperationalError."""')]),t._v("\n    query"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" dataset_triggered_dag_info "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" DagModel"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dags_needing_dagruns"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("session"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    all_dags_needing_dag_runs "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("set")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("query"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("all")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    dataset_triggered_dags "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n        dag "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" dag "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" all_dags_needing_dag_runs "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" dag"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dag_id "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" dataset_triggered_dag_info\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    non_dataset_dags "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" all_dags_needing_dag_runs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("difference"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dataset_triggered_dags"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_create_dag_runs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("non_dataset_dags"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" session"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" dataset_triggered_dags"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_create_dag_runs_dataset_triggered"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n            dataset_triggered_dags"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" dataset_triggered_dag_info"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" session\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    guard"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("commit"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("_create_dag_runs")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" dag_models"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Collection"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("DagModel"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" session"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Session"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[t._v('"""Create a DAG run and update the dag_model to control if/when the next DAGRun should be created."""')]),t._v("\n    existing_dagruns "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n        session"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("execute"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n            select"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("DagRun"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dag_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" DagRun"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("execution_date"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("where"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n                tuple_in_condition"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n                    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("DagRun"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dag_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" DagRun"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("execution_date"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dm"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dag_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" dm"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("next_dagrun"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" dm "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" dag_models"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("unique"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("all")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    active_runs_of_dags "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Counter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n        DagRun"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("active_runs_of_dags"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dag_ids"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dm"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dag_id "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" dm "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" dag_models"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" session"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("session"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" dag_model "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" dag_models"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        dag "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dagbag"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get_dag"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dag_model"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dag_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" session"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("session"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("not")]),t._v(" dag"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("log"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("error"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("\"DAG '%s' not found in serialized_dag table\"")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" dag_model"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dag_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("continue")]),t._v("\n\n        dag_hash "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dagbag"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dags_hash"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dag"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dag_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n        data_interval "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" dag"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get_next_data_interval"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dag_model"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dag"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dag_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" dag_model"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("next_dagrun"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("not")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" existing_dagruns"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                dag"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("create_dagrun"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n                    run_type"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("DagRunType"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("SCHEDULED"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                    execution_date"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("dag_model"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("next_dagrun"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                    state"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("DagRunState"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("QUEUED"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                    data_interval"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("data_interval"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                    external_trigger"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("False")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                    session"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("session"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                    dag_hash"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("dag_hash"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                    creating_job_id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("job"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                active_runs_of_dags"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("dag"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dag_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("except")]),t._v(" Exception"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("log"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exception"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Failed creating DagRun for %s"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" dag"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dag_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("continue")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_should_update_dag_next_dagruns"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n            dag"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            dag_model"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            last_dag_run"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            total_active_runs"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("active_runs_of_dags"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("dag"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dag_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            session"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("session"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            dag_model"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("calculate_dagrun_date_fields"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dag"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" data_interval"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[s("strong",[t._v("最终是通过调用DAG类的create_dagrun方法来创建DagRun实例和添加到数据库。")])]),t._v(" "),s("h4",{attrs:{id:"dag-create-dagrun"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dag-create-dagrun"}},[t._v("#")]),t._v(" DAG.create_dagrun")]),t._v(" "),s("p",[t._v("路径：airflow/models/dag.py")]),t._v(" "),s("p",[s("code",[t._v("create_dagrun")]),t._v(" 函数是 Airflow 中 "),s("code",[t._v("DAG")]),t._v(" 类的一个方法，用于为 DAG 创建一个新的 DagRun 实例。以下是该方法的关键代码，可以看到create_dagrun方法会创建一个DagRun实例并添加到数据库中，然后返回该实例。")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token decorator annotation punctuation"}},[t._v("@provide_session")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("create_dagrun")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" DagRunState"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    execution_date"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" datetime "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    run_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("str")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    start_date"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" datetime "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    external_trigger"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bool")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("False")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    conf"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("dict")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    run_type"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" DagRunType "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    session"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Session "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" NEW_SESSION"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    dag_hash"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("str")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    creating_job_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    data_interval"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("tuple")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("datetime"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" datetime"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 其他代码....")]),t._v("\n\n    run "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" DagRun"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n        dag_id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dag_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        run_id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("run_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        execution_date"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("logical_date"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        start_date"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("start_date"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        external_trigger"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("external_trigger"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        conf"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("conf"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        state"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        run_type"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("run_type"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        dag_hash"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("dag_hash"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        creating_job_id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("creating_job_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        data_interval"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("data_interval"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    session"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("add"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("run"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    session"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("flush"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    run"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dag "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" self\n\n    run"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("verify_integrity"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("session"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("session"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" run\n")])])]),s("h3",{attrs:{id:"_7、dagrun任务实例调度"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7、dagrun任务实例调度"}},[t._v("#")]),t._v(" 7、DagRun任务实例调度")]),t._v(" "),s("p",[t._v("对于每个DAG运行实例，Scheduler会根据任务之间的依赖关系安排任务。这一过程涉及到"),s("code",[t._v("SchedulerJob._schedule_dag_run")]),t._v("方法。")]),t._v(" "),s("p",[t._v("它会根据DAG中任务之间的依赖关系确定哪些任务应该被执行，并为这些任务创建相应的任务实例。")]),t._v(" "),s("h4",{attrs:{id:"schedulerjobrunner-do-scheduling"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#schedulerjobrunner-do-scheduling"}},[t._v("#")]),t._v(" SchedulerJobRunner._do_scheduling")]),t._v(" "),s("p",[t._v("这个方法的主要目的是在 Airflow 调度器中执行调度任务，包括创建和启动 DagRuns、安排任务实例、将回调发送给处理器等。")]),t._v(" "),s("p",[t._v("以下是方法的详细解释：")]),t._v(" "),s("ol",[s("li",[t._v("使用 "),s("code",[t._v("prohibit_commit")]),t._v(" 上下文管理器确保在此代码块中不会意外地提交 session。")]),t._v(" "),s("li",[t._v("如果 "),s("code",[t._v("settings.USE_JOB_SCHEDULE")]),t._v(" 为 True，则调用 "),s("code",[t._v("_create_dagruns_for_dags")]),t._v(" 方法为所有 DAGs 创建 DagRuns。")]),t._v(" "),s("li",[t._v("调用 "),s("code",[t._v("_start_queued_dagruns")]),t._v(" 方法启动排队的 DagRuns。")]),t._v(" "),s("li",[t._v("使用 "),s("code",[t._v("_get_next_dagruns_to_examine")]),t._v(" 方法获取要检查的 DagRuns（状态为 RUNNING）。")]),t._v(" "),s("li",[t._v("使用 "),s("code",[t._v("_schedule_all_dag_runs")]),t._v(" 方法为所有 DagRuns 安排任务实例。")]),t._v(" "),s("li",[t._v("创建一个名为 "),s("code",[t._v("cached_get_dag")]),t._v(" 的函数，该函数使用 LRU 缓存从 DagBag 中获取 DAG。")]),t._v(" "),s("li",[t._v("遍历所有的 DagRuns 和回调函数，从缓存中获取 DAG 并将回调发送给处理器。")]),t._v(" "),s("li",[t._v("使用 "),s("code",[t._v("prohibit_commit")]),t._v(" 上下文管理器确保在此代码块中不会意外地提交 session。")]),t._v(" "),s("li",[t._v("清除 session 中的所有对象。")]),t._v(" "),s("li",[t._v("检查执行器是否有可用的插槽数。如果没有，跳过关键部分，将 "),s("code",[t._v("num_queued_tis")]),t._v(" 设为 0。")]),t._v(" "),s("li",[t._v("如果有可用的插槽数，尝试进入关键部分，并使用计时器记录执行时间。调用 "),s("code",[t._v("_critical_section_enqueue_task_instances")]),t._v(" 方法将任务实例添加到队列中。如果发生操作错误（如锁不可用），则捕获异常并根据错误类型进行处理。如果是锁不可用的错误，记录调试日志并将 "),s("code",[t._v("num_queued_tis")]),t._v(" 设为 0。否则，抛出异常。")]),t._v(" "),s("li",[t._v("提交 session 更改。")]),t._v(" "),s("li",[t._v("返回排队的任务实例数量（"),s("code",[t._v("num_queued_tis")]),t._v("）。")])]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("_do_scheduling")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" session"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Session"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("with")]),t._v(" prohibit_commit"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("session"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" guard"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" settings"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("USE_JOB_SCHEDULE"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_create_dagruns_for_dags"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("guard"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" session"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n        self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_start_queued_dagruns"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("session"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        guard"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("commit"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        dag_runs "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_get_next_dagruns_to_examine"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("DagRunState"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("RUNNING"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" session"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n        callback_tuples "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_schedule_all_dag_runs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("guard"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" dag_runs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" session"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    cached_get_dag"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Callable"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("str")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" DAG "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" lru_cache"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n        partial"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dagbag"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get_dag"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" session"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("session"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" dag_run"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" callback_to_run "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" callback_tuples"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        dag "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" cached_get_dag"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dag_run"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dag_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" dag"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_send_dag_callbacks_to_processor"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dag"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" callback_to_run"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("log"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("error"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("\"DAG '%s' not found in serialized_dag table\"")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" dag_run"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dag_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("with")]),t._v(" prohibit_commit"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("session"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" guard"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        session"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("expunge_all"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("job"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("executor"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("slots_available "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("log"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("debug"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Executor full, skipping critical section"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            num_queued_tis "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                timer "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Stats"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("timer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"scheduler.critical_section_duration"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                timer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("start"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n                num_queued_tis "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_critical_section_enqueue_task_instances"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("session"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("session"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n                timer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stop"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("send"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("except")]),t._v(" OperationalError "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                timer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stop"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("send"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("False")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" is_lock_not_available_error"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("error"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                    self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("log"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("debug"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Critical section lock held by another Scheduler"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                    Stats"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("incr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"scheduler.critical_section_busy"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                    session"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("rollback"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("raise")]),t._v("\n\n        guard"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("commit"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" num_queued_tis\n")])])]),s("h4",{attrs:{id:"schedulerjobrunner-schedule-all-dag-runs"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#schedulerjobrunner-schedule-all-dag-runs"}},[t._v("#")]),t._v(" SchedulerJobRunner._schedule_all_dag_runs")]),t._v(" "),s("p",[t._v("这段代码定义了一个名为 "),s("code",[t._v("_schedule_all_dag_runs")]),t._v(" 的方法，它对一组 DAG 运行实例（DagRun）进行调度决策。这个方法接收三个参数：一个是 "),s("code",[t._v("guard")]),t._v("，代表一个禁止提交的保护器（CommitProhibitorGuard）；一个是 "),s("code",[t._v("dag_runs")]),t._v("，代表一个可迭代的 DAG 运行实例集合；另一个是 "),s("code",[t._v("session")]),t._v("，代表数据库会话。")]),t._v(" "),s("p",[t._v("下图是，在该函数中，任务实例状态发生的变迁。")]),t._v(" "),s("img",{staticStyle:{zoom:"50%"},attrs:{src:a(471),alt:"image-20240326195129120"}}),t._v(" "),s("p",[t._v("以下是具体的步骤：")]),t._v(" "),s("ol",[s("li",[t._v("使用列表推导式遍历 "),s("code",[t._v("dag_runs")]),t._v("，对每个 DAG 运行实例调用 "),s("code",[t._v("_schedule_dag_run")]),t._v(" 方法进行调度决策。将每个 DAG 运行实例及其对应的回调函数（如果有的话）组成一个元组，添加到列表 "),s("code",[t._v("callback_tuples")]),t._v(" 中。")]),t._v(" "),s("li",[t._v("提交 "),s("code",[t._v("guard")]),t._v(" 保护的事务。")]),t._v(" "),s("li",[t._v("返回 "),s("code",[t._v("callback_tuples")]),t._v(" 列表。")])]),t._v(" "),s("p",[t._v("这个方法的返回值是一个列表，其中的每个元素都是一个包含两个元素的元组。第一个元素是一个 DAG 运行实例，第二个元素是一个 "),s("code",[t._v("DagCallbackRequest")]),t._v(" 对象（表示需要执行的回调函数）或者是 "),s("code",[t._v("None")]),t._v("（表示没有需要执行的回调函数）。")]),t._v(" "),s("p",[t._v("注意，这个方法使用了一个名为 "),s("code",[t._v("retry_db_transaction")]),t._v(" 的装饰器。这个装饰器的作用是在数据库事务失败时自动重试该方法。这样可以确保在遇到数据库事务问题时，调度器仍然可以正常工作。")]),t._v(" "),s("p",[t._v("文件路径：airflow/jobs/scheduler_job_runner.py")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token decorator annotation punctuation"}},[t._v("@retry_db_transaction")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("_schedule_all_dag_runs")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    guard"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" CommitProhibitorGuard"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    dag_runs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Iterable"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("DagRun"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    session"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Session"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("list")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("tuple")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("DagRun"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" DagCallbackRequest "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[t._v('"""Make scheduling decisions for all `dag_runs`."""')]),t._v("\n    callback_tuples "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("run"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_schedule_dag_run"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("run"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" session"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("session"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" run "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" dag_runs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    guard"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("commit"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" callback_tuples\n")])])]),s("h4",{attrs:{id:"schedulerjobrunner-schedule-dag-run"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#schedulerjobrunner-schedule-dag-run"}},[t._v("#")]),t._v(" SchedulerJobRunner._schedule_dag_run")]),t._v(" "),s("p",[t._v("这段代码定义了一个名为 "),s("code",[t._v("_schedule_dag_run")]),t._v(" 的方法，这个方法对单个的 DAG 运行实例（DagRun）进行调度决策。这个方法接收两个参数：一个是 "),s("code",[t._v("dag_run")]),t._v("，代表需要调度的 DAG 运行实例；另一个是 "),s("code",[t._v("session")]),t._v("，代表数据库会话。")]),t._v(" "),s("p",[t._v("以下是具体的步骤：")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("从 DAG 包（DagBag）和数据库中获取对应的 DAG 和 DAG 模型（DagModel）。如果找不到，就记录错误日志并返回。")])]),t._v(" "),s("li",[s("p",[t._v("检查 DAG 运行实例是否超时。如果 DAG 运行实例已经开始，并且设置了超时时间，且开始时间早于当前时间减去超时时间，那么就将 DAG 运行实例的状态设置为失败（FAILED）。然后，将所有未完成的任务实例（TaskInstance）的状态设置为跳过（SKIPPED），并将这些更改保存到数据库。最后，记录日志，表示 DAG 运行实例已经超时。")])]),t._v(" "),s("li",[s("p",[t._v("如果 DAG 运行实例的执行日期晚于当前时间，并且 DAG 不允许未来的执行日期，那么就记录错误日志并返回。")])]),t._v(" "),s("li",[s("p",[t._v("如果 DAG 发生了变化，那么就验证 DAG 的完整性。如果在验证过程中 DAG 消失了，那么就记录警告日志并返回。")])]),t._v(" "),s("li",[s("p",[t._v("调用"),s("code",[t._v("dag_run.update_state")]),t._v("方法，更新 DAG 运行实例的状态，并获取可以调度的任务实例和需要运行的回调函数。")]),t._v(" "),s("p",[t._v("该方法根据其任务实例（TaskInstances）的状态进行判断。这个方法会检查所有任务实例的状态，如果所有任务实例都成功，那么 DagRun 就标记为成功；如果有任何一个任务实例失败，那么 DagRun 就标记为失败；如果所有任务实例都处于死锁状态，那么 DagRun 就标记为失败；否则， DagRun 的状态就被标记为运行中。")])]),t._v(" "),s("li",[s("p",[t._v("如果需要更新 DAG 的下一个运行日期，那么就计算下一个运行日期。")])]),t._v(" "),s("li",[s("p",[t._v("调用"),s("code",[t._v("dag_run.schedule_tis")]),t._v("方法，调度可以调度的任务实例。")])]),t._v(" "),s("li",[s("p",[t._v("返回需要运行的回调函数。")])])]),t._v(" "),s("p",[t._v("这个方法的返回值是一个 "),s("code",[t._v("DagCallbackRequest")]),t._v(" 对象，表示需要执行的回调函数，或者是 "),s("code",[t._v("None")]),t._v("，表示没有需要执行的回调函数。")]),t._v(" "),s("p",[t._v("文件路径：airflow/jobs/scheduler_job_runner.py")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("_schedule_dag_run")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    dag_run"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" DagRun"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    session"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Session"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" DagCallbackRequest "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    callback"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" DagCallbackRequest "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),t._v("\n\n    dag "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" dag_run"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dag "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dagbag"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get_dag"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dag_run"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dag_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" session"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("session"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    dag_model "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" DM"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get_dagmodel"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dag_run"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dag_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" session"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("not")]),t._v(" dag "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("or")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("not")]),t._v(" dag_model"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("log"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("error"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Couldn\'t find DAG %s in DAG bag or database!"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" dag_run"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dag_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" callback\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n        dag_run"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("start_date\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("and")]),t._v(" dag"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dagrun_timeout\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("and")]),t._v(" dag_run"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("start_date "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" timezone"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("utcnow"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" dag"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dagrun_timeout\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        dag_run"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("set_state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("DagRunState"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("FAILED"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        unfinished_task_instances "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" session"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("scalars"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n            select"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("TI"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("where"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("TI"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dag_id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" dag_run"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dag_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("where"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("TI"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("run_id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" dag_run"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("run_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("where"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("TI"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("in_"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("State"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("unfinished"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" task_instance "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" unfinished_task_instances"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            task_instance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" TaskInstanceState"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("SKIPPED\n            session"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("merge"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("task_instance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        session"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("flush"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("log"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("info"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Run %s of %s has timed-out"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" dag_run"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("run_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" dag_run"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dag_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_should_update_dag_next_dagruns"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dag"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" dag_model"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" last_dag_run"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("dag_run"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" session"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("session"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            dag_model"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("calculate_dagrun_date_fields"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dag"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" dag"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get_run_data_interval"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dag_run"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n        callback_to_execute "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" DagCallbackRequest"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n            full_filepath"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("dag"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("fileloc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            dag_id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("dag"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dag_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            run_id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("dag_run"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("run_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            is_failure_callback"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            processor_subdir"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("dag_model"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("processor_subdir"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            msg"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"timed_out"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n        dag_run"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("notify_dagrun_state_changed"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        duration "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" dag_run"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("end_date "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" dag_run"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("start_date\n        Stats"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("timing"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string-interpolation"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('f"dagrun.duration.failed.')]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("dag_run"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dag_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" duration"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        Stats"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("timing"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"dagrun.duration.failed"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" duration"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" tags"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"dag_id"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dag_run"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dag_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" callback_to_execute\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" dag_run"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("execution_date "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" timezone"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("utcnow"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("and")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("not")]),t._v(" dag"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("allow_future_exec_dates"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("log"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("error"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Execution date is in future: %s"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" dag_run"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("execution_date"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" callback\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("not")]),t._v(" self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_verify_integrity_if_dag_changed"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dag_run"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("dag_run"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" session"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("session"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("log"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("warning"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"The DAG disappeared before verifying integrity: %s. Skipping."')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" dag_run"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dag_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" callback\n\n    schedulable_tis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" callback_to_run "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" dag_run"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("update_state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("session"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("session"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" execute_callbacks"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("False")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_should_update_dag_next_dagruns"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dag"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" dag_model"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" last_dag_run"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("dag_run"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" session"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("session"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        dag_model"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("calculate_dagrun_date_fields"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dag"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" dag"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get_run_data_interval"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dag_run"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    dag_run"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("schedule_tis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("schedulable_tis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" session"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" max_tis_per_query"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("job"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("max_tis_per_query"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" callback_to_run\n")])])]),s("p",[t._v("在"),s("code",[t._v("dag_run.update_state")]),t._v("方法中我们看到它返回了可调度的任务实例，也就是这里会决定当前DagRun任务实例（TaskInstances）的调度决策信息。该方法里主要通过调用"),s("code",[t._v("task_instance_scheduling_decisions")]),t._v("实现。")]),t._v(" "),s("h4",{attrs:{id:"dagrun-task-instance-scheduling-decisions"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dagrun-task-instance-scheduling-decisions"}},[t._v("#")]),t._v(" DagRun.task_instance_scheduling_decisions")]),t._v(" "),s("p",[s("code",[t._v("task_instance_scheduling_decisions")]),t._v(" 方法用于获取 DAG 运行实例（DagRun）的任务实例（TaskInstances）的调度决策信息。它首先获取所有任务实例，然后排除在 DAG 中找不到的任务实例。接着，将任务实例分为未完成的和已完成的两组。对于未完成的任务实例，选择状态为可调度（scheduled）的任务实例，并获取准备好的任务实例。最后，返回一个包含所有任务实例、可调度的任务实例、已更改的任务实例、未完成的任务实例和已完成的任务实例的 "),s("code",[t._v("TISchedulingDecision")]),t._v(" 对象。")]),t._v(" "),s("p",[t._v("下面是每个代码的分段解释：")]),t._v(" "),s("ol",[s("li",[t._v("调用 "),s("code",[t._v("get_task_instances")]),t._v(" 方法获取所有状态为 "),s("code",[t._v("State.task_states")]),t._v(" 的任务实例。")]),t._v(" "),s("li",[t._v("定义一个名为 "),s("code",[t._v("_filter_tis_and_exclude_removed")]),t._v(" 的函数，用于获取任务实例对应的任务，并排除那些在 DAG 中找不到的任务实例。如果任务实例的状态不是已移除（REMOVED），那么就将其状态设置为已移除，并保存到数据库。")]),t._v(" "),s("li",[t._v("调用 "),s("code",[t._v("_filter_tis_and_exclude_removed")]),t._v(" 函数处理任务实例。")]),t._v(" "),s("li",[t._v("将任务实例分为未完成的和已完成的两组。")]),t._v(" "),s("li",[t._v("如果有未完成的任务实例，那么就从中选择状态为可调度的任务实例，并调用 "),s("code",[t._v("_get_ready_tis")]),t._v(" 方法获取准备好的任务实例。如果在这个过程中发生了扩展，那么就重新计算未完成的和已完成的任务实例。")]),t._v(" "),s("li",[t._v("如果没有未完成的任务实例，那么就将可调度的任务实例和已更改的任务实例设置为空。")]),t._v(" "),s("li",[t._v("返回一个 "),s("code",[t._v("TISchedulingDecision")]),t._v(" 对象，包含所有任务实例、可调度的任务实例、已更改的任务实例、未完成的任务实例和已完成的任务实例。")])]),t._v(" "),s("p",[t._v("这个方法的返回值是一个 "),s("code",[t._v("TISchedulingDecision")]),t._v(" 对象，表示任务实例的调度决策信息。")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token decorator annotation punctuation"}},[t._v("@provide_session")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("task_instance_scheduling_decisions")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" session"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Session "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" NEW_SESSION"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" TISchedulingDecision"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    tis "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get_task_instances"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("session"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("session"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" state"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("State"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("task_states"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("log"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("debug"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"number of tis tasks for %s: %s task(s)"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("len")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("tis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("_filter_tis_and_exclude_removed")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dag"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" DAG"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" tis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("list")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("TI"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" Iterable"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("TI"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[t._v('"""Populate ``ti.task`` while excluding those missing one, marking them as REMOVED."""')]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" ti "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" tis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                ti"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("task "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" dag"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get_task"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ti"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("task_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("except")]),t._v(" TaskNotFound"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" ti"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" TaskInstanceState"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("REMOVED"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                    self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("log"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("error"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Failed to get task for ti %s. Marking it as removed."')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ti"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                    ti"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" TaskInstanceState"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("REMOVED\n                    session"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("flush"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("yield")]),t._v(" ti\n\n    tis "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("list")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_filter_tis_and_exclude_removed"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get_dag"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" tis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    unfinished_tis "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("t "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" t "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" tis "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" State"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("unfinished"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    finished_tis "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("t "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" t "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" tis "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" State"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("finished"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" unfinished_tis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        schedulable_tis "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("ut "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" ut "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" unfinished_tis "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" ut"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" SCHEDULEABLE_STATES"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n        self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("log"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("debug"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"number of scheduleable tasks for %s: %s task(s)"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("len")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("schedulable_tis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        schedulable_tis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" changed_tis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" expansion_happened "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_get_ready_tis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n            schedulable_tis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            finished_tis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            session"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("session"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" expansion_happened"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            changed_tis "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),t._v("\n            new_unfinished_tis "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("t "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" t "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" unfinished_tis "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" State"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("unfinished"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n            finished_tis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("extend"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("t "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" t "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" unfinished_tis "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" State"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("finished"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            unfinished_tis "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" new_unfinished_tis\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        schedulable_tis "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n        changed_tis "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("False")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" TISchedulingDecision"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n        tis"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("tis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        schedulable_tis"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("schedulable_tis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        changed_tis"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("changed_tis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        unfinished_tis"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("unfinished_tis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        finished_tis"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("finished_tis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h4",{attrs:{id:"dagrun-schedule-tis"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dagrun-schedule-tis"}},[t._v("#")]),t._v(" DagRun.schedule_tis")]),t._v(" "),s("p",[t._v("这段代码定义了一个名为 "),s("code",[t._v("schedule_tis")]),t._v(" 的方法，它负责将给定的任务实例（TaskInstances，简称 TIs）设置为调度状态（SCHEDULED）。这个方法接收三个参数：一个是 "),s("code",[t._v("schedulable_tis")]),t._v("，代表可调度的任务实例集合；一个是 "),s("code",[t._v("session")]),t._v("，代表数据库会话；另一个是 "),s("code",[t._v("max_tis_per_query")]),t._v("，代表每个查询中最多处理的任务实例数量。")]),t._v(" "),s("p",[t._v("以下是具体的步骤：")]),t._v(" "),s("ol",[s("li",[t._v("遍历 "),s("code",[t._v("schedulable_tis")]),t._v("，将不需要执行的任务实例（如使用 EmptyOperator 且没有回调函数或出口的任务实例）添加到 "),s("code",[t._v("dummy_ti_ids")]),t._v(" 列表中，将需要执行的任务实例添加到 "),s("code",[t._v("schedulable_ti_ids")]),t._v(" 列表中。")]),t._v(" "),s("li",[t._v("初始化计数器 "),s("code",[t._v("count")]),t._v(" 为 0。")]),t._v(" "),s("li",[t._v("如果有需要执行的任务实例，那么将 "),s("code",[t._v("schedulable_ti_ids")]),t._v(" 列表分割成多个块（每个块的大小由 "),s("code",[t._v("max_tis_per_query")]),t._v(" 决定），然后遍历这些块，对每个块执行更新操作，将任务实例的状态设置为调度状态（SCHEDULED），并累加影响的行数到计数器 "),s("code",[t._v("count")]),t._v("。")]),t._v(" "),s("li",[t._v("如果有不需要执行的任务实例（如使用 EmptyOperator 的任务实例），那么将 "),s("code",[t._v("dummy_ti_ids")]),t._v(" 列表分割成多个块（每个块的大小由 "),s("code",[t._v("max_tis_per_query")]),t._v(" 决定），然后遍历这些块，对每个块执行更新操作，将任务实例的状态设置为成功状态（SUCCESS），并设置开始时间、结束时间和持续时间为 0，同时累加影响的行数到计数器 "),s("code",[t._v("count")]),t._v("。")]),t._v(" "),s("li",[t._v("返回计数器 "),s("code",[t._v("count")]),t._v(" 的值，表示本次调度的任务实例数量。")])]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token decorator annotation punctuation"}},[t._v("@provide_session")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("schedule_tis")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    schedulable_tis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Iterable"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("TI"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    session"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Session "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" NEW_SESSION"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    max_tis_per_query"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    dummy_ti_ids "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    schedulable_ti_ids "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" ti "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" schedulable_tis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" TYPE_CHECKING"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("assert")]),t._v(" ti"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("task\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n            ti"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("task"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("inherits_from_empty_operator\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("and")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("not")]),t._v(" ti"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("task"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("on_execute_callback\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("and")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("not")]),t._v(" ti"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("task"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("on_success_callback\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("and")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("not")]),t._v(" ti"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("task"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("outlets\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            dummy_ti_ids"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("append"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ti"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("task_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ti"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("map_index"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            schedulable_ti_ids"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("append"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ti"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("task_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ti"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("map_index"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    count "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" schedulable_ti_ids"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        schedulable_ti_ids_chunks "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" chunks"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n            schedulable_ti_ids"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" max_tis_per_query "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("or")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("len")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("schedulable_ti_ids"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" schedulable_ti_ids_chunk "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" schedulable_ti_ids_chunks"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            count "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" session"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("execute"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n                update"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("TI"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("where"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n                    TI"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dag_id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dag_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                    TI"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("run_id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("run_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                    tuple_in_condition"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("TI"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("task_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" TI"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("map_index"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" schedulable_ti_ids_chunk"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("values"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("state"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("TaskInstanceState"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("SCHEDULED"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("execution_options"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("synchronize_session"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("False")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("rowcount\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" dummy_ti_ids"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        dummy_ti_ids_chunks "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" chunks"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dummy_ti_ids"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" max_tis_per_query "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("or")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("len")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dummy_ti_ids"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" dummy_ti_ids_chunk "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" dummy_ti_ids_chunks"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            count "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" session"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("execute"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n                update"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("TI"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("where"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n                    TI"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dag_id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dag_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                    TI"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("run_id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("run_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                    tuple_in_condition"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("TI"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("task_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" TI"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("map_index"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" dummy_ti_ids_chunk"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("values"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n                    state"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("TaskInstanceState"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("SUCCESS"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                    start_date"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("timezone"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("utcnow"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                    end_date"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("timezone"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("utcnow"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                    duration"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("execution_options"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n                    synchronize_session"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("False")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("rowcount\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" count\n")])])]),s("h3",{attrs:{id:"_8、dagrun任务实例入队列"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8、dagrun任务实例入队列"}},[t._v("#")]),t._v(" 8、DagRun任务实例入队列")]),t._v(" "),s("p",[t._v("在Airflow中，任务实例的处理主要在"),s("code",[t._v("SchedulerJob._do_scheduling")]),t._v("方法中进行，它会根据DAG中任务之间的依赖关系以及任务实例的状态来决定哪些任务实例应该被执行。")]),t._v(" "),s("p",[t._v("在"),s("code",[t._v("_do_scheduling")]),t._v("方法中，会调用"),s("code",[t._v("_executable_task_instances_to_queued")]),t._v("方法来获取可执行的任务实例，并将它们放入队列中等待执行。然后，调用"),s("code",[t._v("_enqueue_task_instances_with_queued_state")]),t._v("方法将这些任务实例发送到执行器（如LocalExecutor、CeleryExecutor等）进行执行。")]),t._v(" "),s("p",[t._v("对于每个任务实例，其执行过程是在"),s("code",[t._v("BaseOperator.execute")]),t._v("方法中进行的。这个方法会调用具体的操作符类（如PythonOperator、BashOperator等）的"),s("code",[t._v("execute")]),t._v("方法来执行任务。")]),t._v(" "),s("h4",{attrs:{id:"schedulerjobrunner-critical-section-enqueue-task-instances"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#schedulerjobrunner-critical-section-enqueue-task-instances"}},[t._v("#")]),t._v(" SchedulerJobRunner._critical_section_enqueue_task_instances")]),t._v(" "),s("p",[t._v("它负责将任务实例（TaskInstances，简称 TIs）排入执行队列。下图是任务实例在该函数的转变。")]),t._v(" "),s("img",{staticStyle:{zoom:"50%"},attrs:{src:a(472),alt:"image-20240326194806393"}}),t._v(" "),s("p",[t._v("以下是具体的步骤：")]),t._v(" "),s("ol",[s("li",[t._v("根据 "),s("code",[t._v("max_tis_per_query")]),t._v(" 和执行器的可用插槽数确定本次可以处理的最大任务实例数量。")]),t._v(" "),s("li",[t._v("调用 "),s("code",[t._v("_executable_task_instances_to_queued")]),t._v(" 方法获取需要排入队列的任务实例。")]),t._v(" "),s("li",[t._v("调用 "),s("code",[t._v("_enqueue_task_instances_with_queued_state")]),t._v(" 方法将任务实例排入执行队列。")])]),t._v(" "),s("p",[t._v("这个方法的返回值是一个整数，表示本次排入队列的任务实例数量。")]),t._v(" "),s("p",[t._v("注意，这个方法是一个关键部分，也就是说，在同一时间只能有一个执行器executor进程执行这个方法。这是通过执行 "),s("code",[t._v("SELECT ... from pool FOR UPDATE")]),t._v(" 实现的。对于支持 NOWAIT 的数据库，如果一个调度器被阻塞，那么它会跳过这个关键部分，继续执行其他任务（如创建新的 DAG 运行实例，将任务实例的状态从 None 进行到 SCHEDULED 等）；对于不支持这个特性的数据库（如 MariaDB 或 MySQL 5.x），其他的调度器会等待锁释放后才能继续执行。")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("_critical_section_enqueue_task_instances")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" session"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Session"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("job"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("max_tis_per_query "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        max_tis "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("job"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("executor"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("slots_available\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        max_tis "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("min")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("job"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("max_tis_per_query"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("job"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("executor"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("slots_available"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    queued_tis "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_executable_task_instances_to_queued"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("max_tis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" session"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("session"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_enqueue_task_instances_with_queued_state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("queued_tis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" session"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("session"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("len")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("queued_tis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h4",{attrs:{id:"schedulerjobrunner-executable-task-instances-to-queued"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#schedulerjobrunner-executable-task-instances-to-queued"}},[t._v("#")]),t._v(" SchedulerJobRunner._executable_task_instances_to_queued")]),t._v(" "),s("p",[t._v("它负责根据各种条件找到准备好执行的任务实例（TaskInstances，简称 TIs），并将它们设置为排队状态（QUEUED）。")]),t._v(" "),s("p",[t._v("以下是具体的步骤：")]),t._v(" "),s("ol",[s("li",[t._v("从 "),s("code",[t._v("Pool")]),t._v(" 表中获取所有的资源池信息。")]),t._v(" "),s("li",[t._v("计算所有资源池的可用插槽数，并检查是否有空闲插槽。如果没有空闲插槽，直接返回空列表。")]),t._v(" "),s("li",[t._v("根据 "),s("code",[t._v("max_tis")]),t._v(" 参数限制最大处理任务实例数量。")]),t._v(" "),s("li",[t._v("初始化各种集合，用于存储无法排队的任务实例（如资源池饱和、DAG 最大活动任务限制、执行器状态、优先级、每个 DAG 最大活动任务实例数、每个 DAG 运行实例最大活动任务实例数等）。")]),t._v(" "),s("li",[t._v("使用循环查询数据库，获取符合条件的任务实例。条件包括：任务实例状态为 SCHEDULED，DAG 运行实例状态为 RUNNING，DAG 没有暂停，以及排除上述集合中无法排队的任务实例。查询结果按优先级、执行日期和映射索引排序。")]),t._v(" "),s("li",[t._v("遍历查询到的任务实例，检查它们是否满足资源池限制、DAG 最大活动任务限制、任务并发限制等条件。如果满足条件，将任务实例添加到 "),s("code",[t._v("executable_tis")]),t._v(" 列表中，并更新资源池的可用插槽数、DAG 活动任务数、任务并发数等信息。")]),t._v(" "),s("li",[t._v("如果在一次循环中没有找到可执行的任务实例，或者任务实例的数量小于 "),s("code",[t._v("max_tis")]),t._v("，那么就结束循环。否则，继续下一轮循环，查询更多符合条件的任务实例。")]),t._v(" "),s("li",[t._v("遍历 "),s("code",[t._v("executable_tis")]),t._v(" 列表，将任务实例的状态设置为排队状态（QUEUED），并更新排队时间和排队作业 ID。同时，发送任务实例状态更改的度量信息。")]),t._v(" "),s("li",[t._v("返回 "),s("code",[t._v("executable_tis")]),t._v(" 列表，即准备好执行的任务实例。")])]),t._v(" "),s("p",[t._v("这个方法的返回值是一个任务实例列表，表示准备好执行的任务实例。")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("_executable_task_instances_to_queued")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" max_tis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" session"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Session"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("list")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("TI"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" airflow"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("models"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pool "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" Pool\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" airflow"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("utils"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("db "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" DBLocks\n\n    executable_tis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("list")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("TI"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" session"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get_bind"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dialect"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"postgresql"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        lock_acquired "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" session"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("execute"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n            text"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"SELECT pg_try_advisory_xact_lock(:id)"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("bindparams"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("DBLocks"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("SCHEDULER_CRITICAL_SECTION"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("scalar"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("not")]),t._v(" lock_acquired"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("raise")]),t._v(" OperationalError"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Failed to acquire advisory lock"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" params"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" orig"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("RuntimeError"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"55P03"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    pools "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Pool"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("slots_stats"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("lock_rows"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" session"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("session"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    pool_slots_free "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("sum")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("max")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" pool"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"open"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" pool "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" pools"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("values"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" pool_slots_free "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("log"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("debug"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"All pools are full!"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n    max_tis "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("min")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("max_tis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" pool_slots_free"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    starved_pools "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("pool_name "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" pool_name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" stats "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" pools"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("items"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" stats"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"open"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    concurrency_map "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__get_concurrency_maps"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("states"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("EXECUTION_STATES"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" session"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("session"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    num_starving_tasks_total "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n\n    starved_dags"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("set")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("str")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("set")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    starved_tasks"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("set")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("tuple")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("str")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("str")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("set")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    starved_tasks_task_dagrun_concurrency"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("set")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("tuple")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("str")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("str")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("str")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("set")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    pool_num_starving_tasks"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("dict")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("str")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Counter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" loop_count "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" itertools"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("count"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("start"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        num_starved_pools "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("len")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("starved_pools"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        num_starved_dags "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("len")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("starved_dags"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        num_starved_tasks "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("len")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("starved_tasks"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        num_starved_tasks_task_dagrun_concurrency "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("len")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("starved_tasks_task_dagrun_concurrency"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n        query "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n            select"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("TI"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("with_hint"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("TI"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"USE INDEX (ti_state)"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" dialect_name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"mysql"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("join"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("TI"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dag_run"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("where"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("DR"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("run_type "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" DagRunType"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("BACKFILL_JOB"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" DR"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" DagRunState"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("RUNNING"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("join"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("TI"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dag_model"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("where"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("not_"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("DM"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("is_paused"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("where"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("TI"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" TaskInstanceState"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("SCHEDULED"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("options"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("selectinload"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("TI"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dag_model"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("order_by"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("TI"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("priority_weight"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" DR"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("execution_date"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" TI"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("map_index"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" starved_pools"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            query "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" query"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("where"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("not_"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("TI"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pool"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("in_"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("starved_pools"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" starved_dags"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            query "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" query"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("where"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("not_"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("TI"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dag_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("in_"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("starved_dags"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" starved_tasks"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            task_filter "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" tuple_in_condition"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("TI"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dag_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" TI"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("task_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" starved_tasks"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            query "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" query"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("where"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("not_"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("task_filter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" starved_tasks_task_dagrun_concurrency"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            task_filter "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" tuple_in_condition"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("TI"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dag_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" TI"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("run_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" TI"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("task_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                starved_tasks_task_dagrun_concurrency"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            query "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" query"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("where"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("not_"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("task_filter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n        query "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" query"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("limit"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("max_tis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n        timer "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Stats"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("timer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"scheduler.critical_section_query_duration"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        timer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("start"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            query "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" with_row_locks"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("query"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" of"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("TI"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" session"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("session"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" skip_locked"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            task_instances_to_examine"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("list")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("TI"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" session"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("scalars"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("query"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("all")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n            timer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stop"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("send"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("except")]),t._v(" OperationalError "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            timer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stop"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("send"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("False")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("raise")]),t._v(" e\n\n\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("not")]),t._v(" task_instances_to_examine"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("log"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("debug"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"No tasks to consider for execution."')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),t._v("\n\n        task_instance_str "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"\\n"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("join"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string-interpolation"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('f"\\t')]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token conversion-option punctuation"}},[t._v("!r")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" x "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" task_instances_to_examine"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("log"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("info"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%s tasks up for execution:\\n%s"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("len")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("task_instances_to_examine"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" task_instance_str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" task_instance "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" task_instances_to_examine"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            pool_name "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" task_instance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pool\n\n            pool_stats "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" pools"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pool_name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("not")]),t._v(" pool_stats"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("log"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("warning"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("\"Tasks using non-existent pool '%s' will not be scheduled\"")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" pool_name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                starved_pools"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("add"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pool_name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("continue")]),t._v("\n\n            pool_num_starving_tasks"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("setdefault"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pool_name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n            pool_total "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" pool_stats"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"total"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n            open_slots "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" pool_stats"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"open"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" open_slots "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("log"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("info"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n                    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Not scheduling since there are %s open slots in pool %s"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" open_slots"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" pool_name\n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                pool_num_starving_tasks"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("pool_name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n                num_starving_tasks_total "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n                starved_pools"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("add"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pool_name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("continue")]),t._v("\n\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" task_instance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pool_slots "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" pool_total"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("log"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("warning"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n                    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Not executing %s. Requested pool slots (%s) are greater than "')]),t._v("\n                    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("\"total pool slots: '%s' for pool: %s.\"")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                    task_instance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                    task_instance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pool_slots"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                    pool_total"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                    pool_name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n                pool_num_starving_tasks"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("pool_name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n                num_starving_tasks_total "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n                starved_tasks"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("add"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("task_instance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dag_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" task_instance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("task_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("continue")]),t._v("\n\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" task_instance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pool_slots "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" open_slots"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("log"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("info"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n                    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Not executing %s since it requires %s slots "')]),t._v("\n                    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"but there are %s open slots in the pool %s."')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                    task_instance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                    task_instance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pool_slots"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                    open_slots"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                    pool_name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                pool_num_starving_tasks"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("pool_name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n                num_starving_tasks_total "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n                starved_tasks"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("add"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("task_instance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dag_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" task_instance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("task_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("continue")]),t._v("\n\n            dag_id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" task_instance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dag_id\n\n            current_active_tasks_per_dag "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" concurrency_map"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dag_active_tasks_map"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("dag_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n            max_active_tasks_per_dag_limit "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" task_instance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dag_model"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("max_active_tasks\n            self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("log"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("info"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"DAG %s has %s/%s running and queued tasks"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                dag_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                current_active_tasks_per_dag"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                max_active_tasks_per_dag_limit"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" current_active_tasks_per_dag "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" max_active_tasks_per_dag_limit"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("log"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("info"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n                    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Not executing %s since the number of tasks running or queued "')]),t._v("\n                    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"from DAG %s is >= to the DAG\'s max_active_tasks limit of %s"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                    task_instance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                    dag_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                    max_active_tasks_per_dag_limit"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                starved_dags"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("add"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dag_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("continue")]),t._v("\n\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" task_instance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dag_model"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("has_task_concurrency_limits"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                serialized_dag "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dagbag"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get_dag"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dag_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" session"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("session"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("not")]),t._v(" serialized_dag"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                    self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("log"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("error"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n                        "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("\"DAG '%s' for task instance %s not found in serialized_dag table\"")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                        dag_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                        task_instance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                    session"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("execute"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n                        update"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("TI"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("where"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("TI"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dag_id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" dag_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" TI"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" TaskInstanceState"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("SCHEDULED"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("values"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("state"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("TaskInstanceState"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("FAILED"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("execution_options"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("synchronize_session"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"fetch"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("continue")]),t._v("\n\n                task_concurrency_limit"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" serialized_dag"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("has_task"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("task_instance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("task_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                    task_concurrency_limit "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" serialized_dag"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get_task"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n                        task_instance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("task_id\n                    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("max_active_tis_per_dag\n\n                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" task_concurrency_limit "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("is")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("not")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                    current_task_concurrency "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" concurrency_map"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("task_concurrency_map"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n                        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("task_instance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dag_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" task_instance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("task_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n                    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" current_task_concurrency "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" task_concurrency_limit"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                        self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("log"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("info"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n                            "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Not executing %s since the task concurrency for"')]),t._v("\n                            "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('" this task has been reached."')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                            task_instance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                        starved_tasks"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("add"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("task_instance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dag_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" task_instance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("task_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("continue")]),t._v("\n\n                task_dagrun_concurrency_limit"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" serialized_dag"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("has_task"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("task_instance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("task_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                    task_dagrun_concurrency_limit "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" serialized_dag"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get_task"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n                        task_instance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("task_id\n                    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("max_active_tis_per_dagrun\n\n                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" task_dagrun_concurrency_limit "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("is")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("not")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                    current_task_dagrun_concurrency "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" concurrency_map"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("task_dagrun_concurrency_map"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n                        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("task_instance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dag_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" task_instance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("run_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" task_instance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("task_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n                    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" current_task_dagrun_concurrency "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" task_dagrun_concurrency_limit"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                        self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("log"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("info"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n                            "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Not executing %s since the task concurrency per DAG run for"')]),t._v("\n                            "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('" this task has been reached."')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                            task_instance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                        starved_tasks_task_dagrun_concurrency"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("add"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n                            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("task_instance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dag_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" task_instance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("run_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" task_instance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("task_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("continue")]),t._v("\n\n            executable_tis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("append"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("task_instance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            open_slots "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-=")]),t._v(" task_instance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pool_slots\n            concurrency_map"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dag_active_tasks_map"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("dag_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n            concurrency_map"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("task_concurrency_map"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("task_instance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dag_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" task_instance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("task_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n            concurrency_map"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("task_dagrun_concurrency_map"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("task_instance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dag_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" task_instance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("run_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" task_instance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("task_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n\n            pool_stats"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"open"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" open_slots\n\n        is_done "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" executable_tis "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("or")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("len")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("task_instances_to_examine"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" max_tis\n        found_new_filters "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("len")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("starved_pools"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" num_starved_pools\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("or")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("len")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("starved_dags"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" num_starved_dags\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("or")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("len")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("starved_tasks"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" num_starved_tasks\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("or")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("len")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("starved_tasks_task_dagrun_concurrency"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" num_starved_tasks_task_dagrun_concurrency\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" is_done "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("or")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("not")]),t._v(" found_new_filters"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),t._v("\n\n        self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("log"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("info"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Found no task instances to queue on query iteration %s "')]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"but there could be more candidate task instances to check."')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            loop_count"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" pool_name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" num_starving_tasks "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" pool_num_starving_tasks"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("items"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        Stats"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("gauge"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string-interpolation"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('f"pool.starving_tasks.')]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("pool_name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" num_starving_tasks"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        Stats"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("gauge"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"pool.starving_tasks"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" num_starving_tasks"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" tags"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"pool_name"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pool_name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    Stats"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("gauge"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"scheduler.tasks.starving"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" num_starving_tasks_total"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    Stats"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("gauge"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"scheduler.tasks.executable"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("len")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("executable_tis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" executable_tis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        task_instance_str "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"\\n"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("join"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string-interpolation"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('f"\\t')]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token conversion-option punctuation"}},[t._v("!r")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" x "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" executable_tis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("log"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("info"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Setting the following tasks to queued state:\\n%s"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" task_instance_str"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n        filter_for_tis "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" TI"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("filter_for_tis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("executable_tis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        session"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("execute"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n            update"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("TI"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("where"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("filter_for_tis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("values"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n                state"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("TaskInstanceState"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("QUEUED"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                queued_dttm"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("timezone"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("utcnow"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                queued_by_job_id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("job"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("execution_options"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("synchronize_session"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("False")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" ti "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" executable_tis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            ti"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("emit_state_change_metric"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("TaskInstanceState"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("QUEUED"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" ti "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" executable_tis"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        make_transient"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ti"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" executable_tis\n")])])]),s("h4",{attrs:{id:"schedulerjobrunner-enqueue-task-instances-with-queued-state"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#schedulerjobrunner-enqueue-task-instances-with-queued-state"}},[t._v("#")]),t._v(" SchedulerJobRunner._enqueue_task_instances_with_queued_state")]),t._v(" "),s("p",[t._v("它负责将已经设置为排队状态（QUEUED）的任务实例（TaskInstances，简称 TIs）实际添加到执行器的队列中。")]),t._v(" "),s("p",[t._v("以下是具体的步骤：")]),t._v(" "),s("ol",[s("li",[t._v("遍历 "),s("code",[t._v("task_instances")]),t._v(" 列表。")]),t._v(" "),s("li",[t._v("如果任务实例对应的 DAG 运行实例状态已经结束，那么就将任务实例的状态设置为 None，并跳过当前循环。")]),t._v(" "),s("li",[t._v("获取任务实例的执行命令、优先级和队列。")]),t._v(" "),s("li",[t._v("记录日志，表示正在将任务实例发送到执行器。")]),t._v(" "),s("li",[t._v("调用执行器的 "),s("code",[t._v("queue_command")]),t._v(" 方法，将任务实例的执行命令添加到队列中。")])]),t._v(" "),s("p",[t._v("这个方法没有返回值。注意，这个方法需要一个有效的数据库会话，以便更新任务实例的状态。")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("_enqueue_task_instances_with_queued_state")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" task_instances"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("list")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("TI"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" session"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Session"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" ti "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" task_instances"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" ti"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dag_run"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" State"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("finished_dr_states"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            ti"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("set_state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" session"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("session"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("continue")]),t._v("\n        command "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ti"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("command_as_list"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n            local"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            pickle_id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("ti"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dag_model"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pickle_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n        priority "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ti"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("priority_weight\n        queue "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ti"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("queue\n        self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("log"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("info"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Sending %s to executor with priority %s and queue %s"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ti"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" priority"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" queue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n        self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("job"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("executor"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("queue_command"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n            ti"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            command"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            priority"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("priority"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            queue"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("queue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h4",{attrs:{id:"baseexecutor-queue-command"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#baseexecutor-queue-command"}},[t._v("#")]),t._v(" BaseExecutor->queue_command")]),t._v(" "),s("p",[t._v("文件路径：airflow/airflow/executors/base_executor.py")]),t._v(" "),s("p",[t._v("在上一步"),s("code",[t._v("_enqueue_task_instances_with_queued_state")]),t._v("函数中，最后调用了Executor的"),s("code",[t._v("queue_command")]),t._v("方法添加到队列中给Executor执行。")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("queue_command")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    task_instance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" TaskInstance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    command"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" CommandType"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    priority"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    queue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("str")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[t._v('"""Queues command to task."""')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" task_instance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("key "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("not")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("queued_tasks"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("log"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("info"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Adding to queue: %s"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" command"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("queued_tasks"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("task_instance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("command"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" priority"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" queue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" task_instance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("log"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("error"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"could not queue task %s"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" task_instance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h3",{attrs:{id:"_9、dagrun任务实例执行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_9、dagrun任务实例执行"}},[t._v("#")]),t._v(" 9、DagRun任务实例执行")]),t._v(" "),s("p",[t._v("在前面调用了"),s("code",[t._v("_do_scheduling")]),t._v("调度函数以后，接下来就开始调用Executor执行任务实例。")]),t._v(" "),s("p",[t._v("![image-20240325093130562](./img/4.2.2.2 dagrun执行.png)")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("_run_scheduler_loop")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("with")]),t._v(" create_session"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" session"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        num_queued_tis "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_do_scheduling"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("session"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n        self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("job"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("executor"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("heartbeat"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n")])])]),s("p",[t._v("如下图所示，是Airflow源代码中Executor涉及到的关键步骤，下面我们会对这些关键的函数源码展开剖析。")]),t._v(" "),s("p",[t._v("我们知道Airflow启动时，默认使用的executor是SequentialExecutor，")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BaseExecutor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("LoggingMixin"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[t._v('"""\n    Base class to inherit for concrete executors such as Celery, Kubernetes, Local, Sequential, etc.\n    """')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" heart_beat\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" trigger_tasks\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" _process_tasks\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" queue_command\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" execute_async\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" sync\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" end\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" terminate\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 其他方法省略...")]),t._v("\n    \n")])])]),s("p",[t._v("所以，后面在调用execute_async和sync方法时，就是调用的SequentialExecutor类里的方法。")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SequentialExecutor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("BaseExecutor"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" execute_async\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" sync\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" end\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" terminate\n")])])]),s("img",{staticStyle:{zoom:"50%"},attrs:{src:a(473),alt:"image-20240325090458283"}}),t._v(" "),s("h4",{attrs:{id:"baseexecutor-heartbeat"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#baseexecutor-heartbeat"}},[t._v("#")]),t._v(" BaseExecutor.heartbeat")]),t._v(" "),s("p",[t._v("它负责发送心跳以触发新的任务。")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("通过调用 "),s("code",[t._v("trigger_tasks")]),t._v(" 方法，根据可用的插槽数触发新的任务。")])]),t._v(" "),s("li",[s("p",[t._v("调用子类的 "),s("code",[t._v("sync")]),t._v(" 方法，用于同步执行器的状态。")])])]),t._v(" "),s("p",[t._v("注意，这个方法需要在子类中实现 "),s("code",[t._v("sync")]),t._v(" 方法，以便同步执行器的状态。")]),t._v(" "),s("p",[t._v("文件路径：airflow/airflow/executors/base_executor.py")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BaseExecutor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("LoggingMixin"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  \t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("heartbeat")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n        self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("trigger_tasks"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("open_slots"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n        self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("sync"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h4",{attrs:{id:"baseexecutor-trigger-tasks"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#baseexecutor-trigger-tasks"}},[t._v("#")]),t._v(" BaseExecutor.trigger_tasks")]),t._v(" "),s("p",[t._v("它负责根据可用的插槽数启动排队任务的异步执行。")]),t._v(" "),s("p",[t._v("以下是具体的步骤：")]),t._v(" "),s("ol",[s("li",[t._v("按优先级对排队的任务进行排序。")]),t._v(" "),s("li",[t._v("遍历排队任务，最多处理 "),s("code",[t._v("open_slots")]),t._v(" 个任务。")]),t._v(" "),s("li",[t._v("如果任务已经在执行器的 "),s("code",[t._v("running")]),t._v(" 集合中，说明任务可能已经被外部终止但尚未标记为失败，或者由于延迟任务的竞争条件，任务可能在触发处理期间再次被调度。在这种情况下，我们会尝试多次检查任务是否已从 "),s("code",[t._v("running")]),t._v(" 集合中移除。如果尝试次数超过限制，我们放弃并从队列中移除该任务。")]),t._v(" "),s("li",[t._v("如果任务不在执行器的 "),s("code",[t._v("running")]),t._v(" 集合中，将任务添加到 "),s("code",[t._v("task_tuples")]),t._v(" 列表中。")]),t._v(" "),s("li",[t._v("如果 "),s("code",[t._v("task_tuples")]),t._v(" 列表不为空，调用 "),s("code",[t._v("_process_tasks")]),t._v(" 方法处理任务。")])]),t._v(" "),s("p",[t._v("这个方法没有返回值。注意，这个方法需要在子类中实现 "),s("code",[t._v("_process_tasks")]),t._v(" 方法，以便处理任务。")]),t._v(" "),s("p",[t._v("文件路径：airflow/airflow/executors/base_executor.py")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BaseExecutor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("LoggingMixin"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  \t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("trigger_tasks")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" open_slots"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          sorted_queue "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("order_queued_tasks_by_priority"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n          task_tuples "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n          "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" _ "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("range")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("min")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("open_slots"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("len")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("queued_tasks"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n              key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("command"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" _"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" queue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ti"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" sorted_queue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pop"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n              "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" key "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("running"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                  attempt "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("attempts"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n                  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" attempt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("can_try_again"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                      self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("log"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("info"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"queued but still running; attempt=%s task=%s"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" attempt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("total_tries"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("continue")]),t._v("\n                  self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("log"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("error"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n                      "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"could not queue task %s (still running after %d attempts)"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" attempt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("total_tries\n                  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("del")]),t._v(" self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("attempts"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n                  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("del")]),t._v(" self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("queued_tasks"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n              "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" key "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("attempts"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                      "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("del")]),t._v(" self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("attempts"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n                  task_tuples"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("append"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" command"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" queue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ti"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("executor_config"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n          "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" task_tuples"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n              self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_process_tasks"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("task_tuples"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h4",{attrs:{id:"baseexecutor-process-tasks"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#baseexecutor-process-tasks"}},[t._v("#")]),t._v(" BaseExecutor->_process_tasks")]),t._v(" "),s("p",[t._v("文件路径：airflow/airflow/executors/base_executor.py")]),t._v(" "),s("p",[s("code",[t._v("_process_tasks")]),t._v(" 方法负责处理任务。")]),t._v(" "),s("p",[t._v("以下是具体的步骤：")]),t._v(" "),s("ol",[s("li",[t._v("遍历 "),s("code",[t._v("task_tuples")]),t._v(" 列表，每个元素包含任务的键、命令、队列和执行器配置。")]),t._v(" "),s("li",[t._v("从 "),s("code",[t._v("queued_tasks")]),t._v(" 字典中删除任务。")]),t._v(" "),s("li",[t._v("调用 "),s("code",[t._v("execute_async")]),t._v(" 方法异步执行任务。")]),t._v(" "),s("li",[t._v("将任务的键添加到 "),s("code",[t._v("running")]),t._v(" 集合中，表示任务正在运行。")])]),t._v(" "),s("p",[t._v("注意，这个方法需要在子类中实现 "),s("code",[t._v("execute_async")]),t._v(" 方法，以便异步执行任务。")]),t._v(" "),s("p",[t._v("文件路径：airflow/airflow/executors/base_executor.py")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BaseExecutor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("LoggingMixin"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("_process_tasks")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" task_tuples"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("list")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("TaskTuple"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" command"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" queue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" executor_config "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" task_tuples"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("del")]),t._v(" self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("queued_tasks"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n            self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("execute_async"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" command"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("command"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" queue"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("queue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" executor_config"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("executor_config"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("running"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("add"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h4",{attrs:{id:"sequentialexecutor-execute-async"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sequentialexecutor-execute-async"}},[t._v("#")]),t._v(" SequentialExecutor.execute_async")]),t._v(" "),s("p",[t._v("由于execute_async方法是在BaseExecutor的子类中调用执行，所以我们需要分析其子类里的execute_async方法。继承BaseExecutor的子类有LocalExecutor、SequentialExecutor，其中"),s("code",[t._v("SequentialExecutor")]),t._v("是 Airflow 默认的执行器。它会按照顺序一个接一个地执行任务，也就是说，在一个任务完成之前，不会启动下一个任务。")]),t._v(" "),s("p",[t._v("下面，我们分析SequentialExecutor中的execute_async方法：")]),t._v(" "),s("p",[t._v("以下是具体的步骤：")]),t._v(" "),s("ol",[s("li",[t._v("定义方法参数，包括任务实例键 "),s("code",[t._v("key")]),t._v("、执行命令 "),s("code",[t._v("command")]),t._v("、队列名称 "),s("code",[t._v("queue")]),t._v(" 和执行器配置 "),s("code",[t._v("executor_config")]),t._v("。")]),t._v(" "),s("li",[t._v("调用 "),s("code",[t._v("validate_airflow_tasks_run_command")]),t._v(' 方法验证执行命令。这个方法确保传入的命令以 "airflow tasks run" 开头，以防止执行意外的命令。')]),t._v(" "),s("li",[t._v("将任务实例键和执行命令作为元组添加到 "),s("code",[t._v("commands_to_run")]),t._v(" 列表中。这个列表用于存储等待执行的任务命令。")])]),t._v(" "),s("p",[t._v("这个方法没有返回值。注意，虽然方法名为 "),s("code",[t._v("execute_async")]),t._v("，但实际上它并不异步执行任务。任务的实际执行是在 "),s("code",[t._v("SequentialExecutor")]),t._v(" 的 "),s("code",[t._v("sync")]),t._v(" 方法中进行的，该方法会顺序执行 "),s("code",[t._v("commands_to_run")]),t._v(" 列表中的任务。")]),t._v(" "),s("p",[t._v("文件路径：airflow/airflow/executors/sequential_executor.py")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SequentialExecutor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("BaseExecutor"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("execute_async")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n        self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" TaskInstanceKey"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        command"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" CommandType"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        queue"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("str")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        executor_config"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Any "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("validate_airflow_tasks_run_command"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("command"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("commands_to_run"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("append"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" command"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h4",{attrs:{id:"sequentialexecutor-sync"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sequentialexecutor-sync"}},[t._v("#")]),t._v(" SequentialExecutor.sync")]),t._v(" "),s("p",[t._v("它负责顺序执行 "),s("code",[t._v("commands_to_run")]),t._v(" 列表中的任务。")]),t._v(" "),s("p",[t._v("以下是具体的步骤：")]),t._v(" "),s("ol",[s("li",[t._v("遍历 "),s("code",[t._v("commands_to_run")]),t._v(" 列表，获取任务实例键 "),s("code",[t._v("key")]),t._v(" 和执行命令 "),s("code",[t._v("command")]),t._v("。")]),t._v(" "),s("li",[t._v("记录日志，表示正在执行命令。")]),t._v(" "),s("li",[t._v("使用 "),s("code",[t._v("subprocess.check_call")]),t._v(" 函数执行命令。"),s("code",[t._v("close_fds=True")]),t._v(" 参数表示在执行子进程前关闭所有文件描述符，这有助于防止文件描述符泄漏。")]),t._v(" "),s("li",[t._v("如果命令执行成功，调用 "),s("code",[t._v("success")]),t._v(" 方法更新任务实例键的状态。")]),t._v(" "),s("li",[t._v("如果命令执行失败（抛出 "),s("code",[t._v("subprocess.CalledProcessError")]),t._v(" 异常），调用 "),s("code",[t._v("fail")]),t._v(" 方法更新任务实例键的状态，并记录错误日志。")]),t._v(" "),s("li",[t._v("清空 "),s("code",[t._v("commands_to_run")]),t._v(" 列表，表示所有任务已经执行完成。")])]),t._v(" "),s("p",[t._v("注意，这个方法是顺序执行任务的，即在一个任务完成之前，不会启动下一个任务。")]),t._v(" "),s("p",[t._v("文件路径：airflow/airflow/executors/sequential_executor.py")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SequentialExecutor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("BaseExecutor"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("sync")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" command "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("commands_to_run"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("log"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("info"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Executing command: %s"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" command"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                subprocess"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("check_call"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("command"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" close_fds"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("success"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("except")]),t._v(" subprocess"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("CalledProcessError "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("fail"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("log"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("error"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Failed to execute task %s."')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n        self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("commands_to_run "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),s("p",[t._v("这里command的格式通过Airflow的日志打印如下，就是一个本地python文件的执行。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("Executing command: ['airflow', 'tasks', 'run', 'tutorial_dag', 'extract', 'manual__2023-11-07T12:16:02.851026+00:00', '--local', '--subdir', '/airflow/example_dags/tutorial_dag.py']\n")])])]),s("p",[t._v("这里使用的命令是airflow的"),s("code",[t._v("airflow tasks run")]),t._v("命令，参数如下。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("airflow tasks run -h\nUsage: airflow tasks run [-h] [--cfg-path CFG_PATH] [-d {wait,check,ignore}] [-f] [-A] [-i] [-I] [-N] [-l] [--map-index MAP_INDEX] [-m] [-p PICKLE] [--pool POOL]\n                         [--read-from-db] [--ship-dag] [-S SUBDIR] [-v]\n                         dag_id task_id execution_date_or_run_id\n\nRun a single task instance\n\nPositional Arguments:\n  dag_id                The id of the dag\n  task_id               The id of the task\n  execution_date_or_run_id\n                        The execution_date of the DAG or run_id of the DAGRun\n\nOptions:\n  -h, --help            show this help message and exit\n  --cfg-path CFG_PATH   Path to config file to use instead of airflow.cfg\n  -d, --depends-on-past {wait,check,ignore}\n                        Determine how Airflow should deal with past dependencies. The default action is `check`, Airflow will check if the past dependencies are met for the tasks having `depends_on_past=True` before run them, if `ignore` is provided, the past dependencies will be ignored, if `wait` is provided and `depends_on_past=True`, Airflow will wait the past dependencies until they are met before running or skipping the task\n  -f, --force           Ignore previous task instance state, rerun regardless if task already succeeded/failed\n  -A, --ignore-all-dependencies\n                        Ignores all non-critical dependencies, including ignore_ti_state and ignore_task_deps\n  -i, --ignore-dependencies\n                        Ignore task-specific dependencies, e.g. upstream, depends_on_past, and retry delay dependencies\n  -I, --ignore-depends-on-past\n                        Deprecated -- use `--depends-on-past ignore` instead. Ignore depends_on_past dependencies (but respect upstream dependencies)\n  -N, --interactive     Do not capture standard output and error streams (useful for interactive debugging)\n  -l, --local           Run the task using the LocalExecutor\n  --map-index MAP_INDEX\n                        Mapped task index\n  -m, --mark-success    Mark jobs as succeeded without running them\n  -p, --pickle PICKLE   Serialized pickle object of the entire dag (used internally)\n  --pool POOL           Resource pool to use\n  --read-from-db        Read dag from DB instead of dag file\n  --ship-dag            Pickles (serializes) the DAG and ships it to the worker\n  -S, --subdir SUBDIR   File location or directory from which to look for the dag. Defaults to '[AIRFLOW_HOME]/dags' where [AIRFLOW_HOME] is the value you set for 'AIRFLOW_HOME' config you set in 'airflow.cfg'\n  -v, --verbose         Make logging output more verbose\n")])])]),s("p",[t._v("该命令调用的函数如下。")]),t._v(" "),s("h4",{attrs:{id:"task-run"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#task-run"}},[t._v("#")]),t._v(" task_run")]),t._v(" "),s("p",[t._v("这段代码定义了一个名为"),s("code",[t._v("task_run")]),t._v("的函数，它用于运行一个单独的任务实例。这个函数接受两个参数："),s("code",[t._v("args")]),t._v("和"),s("code",[t._v("dag")]),t._v("。"),s("code",[t._v("args")]),t._v("是一个包含命令行参数的对象，"),s("code",[t._v("dag")]),t._v("是一个可选的DAG对象，默认值为"),s("code",[t._v("None")]),t._v("。")]),t._v(" "),s("p",[t._v("函数的主要目的是根据提供的参数执行一个Airflow任务，并返回任务的执行结果。在执行任务之前，它会进行一些参数检查和设置，例如检查"),s("code",[t._v("--local")]),t._v("和"),s("code",[t._v("--raw")]),t._v("选项是否同时使用，加载自定义Airflow配置等。")]),t._v(" "),s("p",[t._v("在函数内部，首先根据提供的参数获取DAG对象。然后，根据DAG对象和任务ID获取任务实例。接下来，根据任务实例和其他参数获取任务实例（TaskInstance）。接着，初始化任务实例的运行上下文。")]),t._v(" "),s("p",[t._v("在运行任务之前，会重新配置ORM（Object-Relational Mapping，对象关系映射）以使用NullPool，以避免在处理大量并发任务时出现数据库连接限制问题。")]),t._v(" "),s("p",[t._v("最后，根据"),s("code",[t._v("args.interactive")]),t._v("参数的值，以交互式或非交互式方式运行任务（调用_run_task_by_selected_method方法），并返回任务的执行结果。在运行任务之后，会触发监听器管理器的"),s("code",[t._v("before_stopping")]),t._v("钩子。")]),t._v(" "),s("p",[t._v("文件路径：airflow/airflow/cli/commands/task_command.py")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token decorator annotation punctuation"}},[t._v("@cli_utils"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("action_cli")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("check_db"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("False")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("task_run")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" dag"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" DAG "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" TaskReturnCode "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("local "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("and")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("raw"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("raise")]),t._v(" AirflowException"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Option --raw and --local are mutually exclusive. "')]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Please remove one option to execute the command."')]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("raw"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        unsupported_options "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("o "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" o "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" RAW_TASK_UNSUPPORTED_OPTION "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("getattr")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" o"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" unsupported_options"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            unsupported_raw_task_flags "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('", "')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("join"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string-interpolation"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('f"--')]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("o"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" o "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" RAW_TASK_UNSUPPORTED_OPTION"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            unsupported_flags "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('", "')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("join"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string-interpolation"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('f"--')]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("o"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" o "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" unsupported_options"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("raise")]),t._v(" AirflowException"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Option --raw does not work with some of the other options on this command. "')]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"You can\'t use --raw option and the following options: "')]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token string-interpolation"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('f"')]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("unsupported_raw_task_flags"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('. "')])]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token string-interpolation"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('f"You provided the option ')]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("unsupported_flags"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('. "')])]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Delete it to execute the command."')]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" dag "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("and")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pickle"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("raise")]),t._v(" AirflowException"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"You cannot use the --pickle option when using DAG.cli() method."')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cfg_path"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("with")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("open")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cfg_path"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" conf_file"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            conf_dict "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" json"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("load"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("conf_file"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" os"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("path"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exists"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cfg_path"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            os"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("remove"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cfg_path"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n        conf"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("read_dict"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("conf_dict"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" source"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cfg_path"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        settings"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("configure_vars"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    settings"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("MASK_SECRETS_IN_LOGS "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),t._v("\n\n    get_listener_manager"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("hook"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("on_starting"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("component"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("TaskCommandMarker"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pickle"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string-interpolation"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('f"Loading pickle id: ')]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pickle"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        _dag "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" get_dag_by_pickle"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pickle"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("elif")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("not")]),t._v(" dag"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        _dag "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" get_dag"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("subdir"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dag_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("read_from_db"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        _dag "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" dag\n    task "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" _dag"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get_task"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("task_id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("task_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    ti"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" _ "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" _get_ti"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("task"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("map_index"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" exec_date_or_run_id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("execution_date_or_run_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" pool"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pool"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    ti"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("init_run_context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("raw"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("raw"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    hostname "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" get_hostname"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    log"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("info"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Running %s on host %s"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ti"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" hostname"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    settings"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("reconfigure_orm"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("disable_connection_pool"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    task_return_code "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("interactive"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            task_return_code "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" _run_task_by_selected_method"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" _dag"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ti"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("with")]),t._v(" _move_task_handlers_to_root"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ti"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" _redirect_stdout_to_ti_log"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ti"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                task_return_code "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" _run_task_by_selected_method"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" _dag"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ti"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" task_return_code "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" TaskReturnCode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("DEFERRED"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                    _set_task_deferred_context_var"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("finally")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            get_listener_manager"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("hook"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("before_stopping"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("component"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("TaskCommandMarker"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("except")]),t._v(" Exception"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("pass")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" task_return_code\n")])])]),s("p",[t._v("这里调用了_run_task_by_selected_method关键方法。")]),t._v(" "),s("h4",{attrs:{id:"run-task-by-selected-method"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#run-task-by-selected-method"}},[t._v("#")]),t._v(" _run_task_by_selected_method")]),t._v(" "),s("p",[t._v("这个函数"),s("code",[t._v("_run_task_by_selected_method")]),t._v("用于根据所选的模式运行Airflow任务。它接受3个参数："),s("code",[t._v("args")]),t._v("，"),s("code",[t._v("dag")]),t._v("和"),s("code",[t._v("ti")]),t._v("。"),s("code",[t._v("args")]),t._v("是一个包含命令行参数的对象，"),s("code",[t._v("dag")]),t._v("是一个DAG对象，"),s("code",[t._v("ti")]),t._v("是一个任务实例（TaskInstance）或TaskInstancePydantic对象。")]),t._v(" "),s("p",[t._v("函数的主要目的是根据提供的参数选择合适的方式执行Airflow任务。目前支持3种模式：")]),t._v(" "),s("ol",[s("li",[t._v("使用LocalTaskJob运行任务。")]),t._v(" "),s("li",[t._v("作为原始任务（raw task）运行。")]),t._v(" "),s("li",[t._v("通过执行器（executor）运行任务。")])]),t._v(" "),s("p",[t._v("根据"),s("code",[t._v("args.local")]),t._v("和"),s("code",[t._v("args.raw")]),t._v("参数的值，函数会分别调用"),s("code",[t._v("_run_task_by_local_task_job")]),t._v("、"),s("code",[t._v("_run_raw_task")]),t._v("或"),s("code",[t._v("_run_task_by_executor")]),t._v("函数来执行任务。最后，函数返回执行结果，如果没有返回值，则返回"),s("code",[t._v("None")]),t._v("。")]),t._v(" "),s("p",[t._v("文件路径：airflow/airflow/cli/commands/task_command.py")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("_run_task_by_selected_method")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" dag"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" DAG"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ti"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" TaskInstance "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" TaskInstancePydantic\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" TaskReturnCode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" TYPE_CHECKING"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("assert")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("not")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("isinstance")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ti"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" TaskInstancePydantic"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Wait for AIP-44 implementation to complete")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("local"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" _run_task_by_local_task_job"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ti"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("raw"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" _run_raw_task"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ti"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    _run_task_by_executor"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" dag"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ti"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),t._v("\n  \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("_run_raw_task")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ti"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" TaskInstance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" TaskReturnCode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[t._v('"""Run the main task handling code."""')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" ti"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_run_raw_task"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n        mark_success"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("mark_success"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        job_id"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("job_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        pool"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pool"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("我们分析其中的_run_raw_task方法，其最终是通过TaskInstance的_run_raw_task方法实现")]),t._v(" "),s("p",[t._v("函数的主要目的是在原始模式下执行Airflow任务，并在任务完成后更新任务状态并运行适当的回调。")]),t._v(" "),s("p",[t._v("在"),s("code",[t._v("_run_raw_task")]),t._v("函数中，任务的实际执行是通过调用"),s("code",[t._v("self._execute_task_with_callbacks(context, test_mode, session=session)")]),t._v("来完成的。这个方法将任务的上下文、测试模式和数据库会话作为参数，并执行任务。在执行任务时，它还会处理任务执行过程中的回调函数。")]),t._v(" "),s("p",[t._v("文件路径：airflow/airflow/models/taskinstance.py")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token decorator annotation punctuation"}},[t._v("@provide_session")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token decorator annotation punctuation"}},[t._v("@Sentry"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("enrich_errors")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("_run_raw_task")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    mark_success"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bool")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("False")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    test_mode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bool")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("False")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    job_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("str")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    pool"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("str")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    raise_on_defer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bool")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("False")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    session"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Session "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" NEW_SESSION"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" TaskReturnCode "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" TYPE_CHECKING"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("assert")]),t._v(" self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("task\n\n    self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("test_mode "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" test_mode\n    self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("refresh_from_task"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("task"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" pool_override"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("pool"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("refresh_from_db"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("session"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("session"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("job_id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" job_id\n    self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("hostname "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" get_hostname"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pid "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" os"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("getpid"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("not")]),t._v(" test_mode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        session"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("merge"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        session"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("commit"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    actual_start_date "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" timezone"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("utcnow"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    Stats"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("incr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string-interpolation"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('f"ti.start.')]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("task"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dag_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("task"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("task_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" tags"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stats_tags"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Same metric with tagging")]),t._v("\n    Stats"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("incr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ti.start"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" tags"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stats_tags"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Initialize final state counters at zero")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" state "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" State"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("task_states"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        Stats"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("incr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token string-interpolation"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('f"ti.finish.')]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("task"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dag_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("task"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("task_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            count"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            tags"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stats_tags"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Same metric with tagging")]),t._v("\n        Stats"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("incr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ti.finish"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            count"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            tags"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stats_tags"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"state"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("str")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("with")]),t._v(" set_current_task_instance_session"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("session"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("session"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("task "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("task"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prepare_for_execution"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        context "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get_template_context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ignore_param_exceptions"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("False")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("not")]),t._v(" mark_success"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_execute_task_with_callbacks"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" test_mode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" session"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("session"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("not")]),t._v(" test_mode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("refresh_from_db"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("lock_for_update"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" session"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("session"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" TaskInstanceState"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("SUCCESS\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("except")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 各种异常处理代码...")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("finally")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            Stats"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("incr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string-interpolation"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('f"ti.finish.')]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dag_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("task_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" tags"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stats_tags"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Same metric with tagging")]),t._v("\n            Stats"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("incr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ti.finish"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" tags"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stats_tags"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"state"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("str")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Recording SKIPPED or SUCCESS")]),t._v("\n        self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("clear_next_method_args"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("end_date "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" timezone"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("utcnow"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        _log_state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("task_instance"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("set_duration"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n        _run_finished_callback"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("callbacks"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("task"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("on_success_callback"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" context"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("not")]),t._v(" test_mode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            session"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("add"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Log"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            session"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("merge"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("task "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("task\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" TaskInstanceState"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("SUCCESS"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_register_dataset_changes"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("session"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("session"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n            session"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("commit"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" TaskInstanceState"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("SUCCESS"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                get_listener_manager"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("hook"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("on_task_instance_success"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n                    previous_state"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("TaskInstanceState"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("RUNNING"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" task_instance"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" session"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("session\n                "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),t._v("\n")])])]),s("p",[t._v("这里调用了关键方法：_execute_task_with_callbacks")]),t._v(" "),s("h4",{attrs:{id:"taskinstance-execute-task-with-callbacks"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#taskinstance-execute-task-with-callbacks"}},[t._v("#")]),t._v(" TaskInstance._execute_task_with_callbacks")]),t._v(" "),s("p",[s("code",[t._v("_execute_task_with_callbacks")]),t._v("函数用于准备任务实例并执行任务。它接受以下参数：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("context")]),t._v("：任务上下文（Context）对象，包含任务执行所需的信息。")]),t._v(" "),s("li",[s("code",[t._v("test_mode")]),t._v("：布尔值，表示是否在测试模式下运行任务，默认值为"),s("code",[t._v("False")]),t._v("。")]),t._v(" "),s("li",[s("code",[t._v("session")]),t._v("：SQLAlchemy ORM Session对象。")])]),t._v(" "),s("p",[t._v("函数的主要步骤如下：")]),t._v(" "),s("ol",[s("li",[t._v("定义一个信号处理器"),s("code",[t._v("signal_handler")]),t._v("，用于处理任务在执行过程中收到的SIGTERM信号。当接收到信号时，它会调用任务的"),s("code",[t._v("on_kill")]),t._v("方法，并引发一个"),s("code",[t._v("AirflowTaskTerminated")]),t._v("异常。")]),t._v(" "),s("li",[t._v("为任务实例清除XCom数据（如果没有下一个要执行的方法）。")]),t._v(" "),s("li",[t._v("使用"),s("code",[t._v("Stats.timer")]),t._v("记录任务执行的时间。")]),t._v(" "),s("li",[t._v("设置任务对象的参数。")]),t._v(" "),s("li",[t._v("渲染任务的模板，并在非测试模式下，将渲染后的任务实例字段保存到数据库中。")]),t._v(" "),s("li",[t._v("将上下文导出到环境变量，以便操作符使用。")]),t._v(" "),s("li",[t._v("调用任务的"),s("code",[t._v("pre_execute")]),t._v("回调函数。")]),t._v(" "),s("li",[t._v("调用"),s("code",[t._v("_run_execute_callback")]),t._v("方法执行"),s("code",[t._v("on_execute")]),t._v("回调。")]),t._v(" "),s("li",[t._v("调用"),s("code",[t._v("get_listener_manager().hook.on_task_instance_running")]),t._v("方法触发任务实例运行事件。")]),t._v(" "),s("li",[t._v("使用"),s("code",[t._v("set_current_context")]),t._v("上下文管理器执行任务，并获取任务执行结果。")]),t._v(" "),s("li",[t._v("调用任务的"),s("code",[t._v("post_execute")]),t._v("回调函数。")]),t._v(" "),s("li",[t._v("如果任务上下文中包含"),s("code",[t._v("map_index_template")]),t._v("，则使用Jinja环境渲染它，并将渲染结果保存到"),s("code",[t._v("self.rendered_map_index")]),t._v("属性中。")]),t._v(" "),s("li",[t._v("更新任务执行成功的统计信息。")])]),t._v(" "),s("p",[t._v("在整个过程中，函数会处理任务执行过程中的各种回调函数，以及在任务执行前后更新任务实例的状态。")]),t._v(" "),s("p",[t._v("文件路径：airflow/airflow/cli/commands/task_command.py")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("_execute_task_with_callbacks")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" test_mode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bool")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("False")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" session"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Session"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[t._v('"""Prepare Task for Execution."""')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" airflow"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("models"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("renderedtifields "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" RenderedTaskInstanceFields\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" TYPE_CHECKING"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("assert")]),t._v(" self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("task\n\n    parent_pid "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" os"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("getpid"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("signal_handler")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("signum"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" frame"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        pid "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" os"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("getpid"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" pid "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" parent_pid"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            os"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_exit"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v("\n        self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("log"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("error"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Received SIGTERM. Terminating subprocesses."')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("task"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("on_kill"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("raise")]),t._v(" AirflowTaskTerminated"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Task received SIGTERM signal"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    signal"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("signal"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("signal"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("SIGTERM"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" signal_handler"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("not")]),t._v(" self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("next_method"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("clear_xcom_data"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("with")]),t._v(" Stats"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("timer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string-interpolation"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('f"dag.')]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("task"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dag_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("task"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("task_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('.duration"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Stats"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("timer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"task.duration"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" tags"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stats_tags\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("task"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("params "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"params"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("with")]),t._v(" set_current_context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            dag "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("task"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get_dag"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" dag "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("is")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("not")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                jinja_env "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" dag"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get_template_env"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                jinja_env "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),t._v("\n            task_orig "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("render_templates"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("context"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" jinja_env"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("jinja_env"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("not")]),t._v(" test_mode"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            rtif "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" RenderedTaskInstanceFields"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ti"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" render_templates"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("False")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            RenderedTaskInstanceFields"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("write"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("rtif"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            RenderedTaskInstanceFields"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("delete_old_records"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("task_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("dag_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n        airflow_context_vars "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" context_to_airflow_vars"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" in_env_var_format"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("True")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        os"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("environ"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("update"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("airflow_context_vars"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("not")]),t._v(" self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("next_method"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("log"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("info"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Exporting env vars: %s"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('" "')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("join"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string-interpolation"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('f"')]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("k"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("v"),s("span",{pre:!0,attrs:{class:"token conversion-option punctuation"}},[t._v("!r")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" k"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" v "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" airflow_context_vars"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("items"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n        self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("task"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("pre_execute"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("context"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# type: ignore[union-attr]")]),t._v("\n\n        self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_run_execute_callback"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("task"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n        get_listener_manager"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("hook"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("on_task_instance_running"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n            previous_state"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("TaskInstanceState"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("QUEUED"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" task_instance"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" session"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("session\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("with")]),t._v(" set_current_context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            result "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("_execute_task"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" task_orig"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n        self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("task"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("post_execute"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("context"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" result"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("result"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# type: ignore[union-attr]")]),t._v("\n\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" jinja_env "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("is")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("not")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("and")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("template "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("get"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"map_index_template"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("is")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("not")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            rendered_map_index "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("rendered_map_index "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" jinja_env"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("from_string"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("template"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("render"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("log"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("info"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Map index rendered as %s"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" rendered_map_index"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    Stats"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("incr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string-interpolation"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('f"operator_successes_')]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("task"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("task_type"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" tags"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stats_tags"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    Stats"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("incr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"operator_successes"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" tags"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stats_tags"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"task_type"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("task"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("task_type"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    Stats"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("incr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ti_successes"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" tags"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stats_tags"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("这里调用了关键方法：_execute_task。")]),t._v(" "),s("h4",{attrs:{id:"taskinstance-execute-task"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#taskinstance-execute-task"}},[t._v("#")]),t._v(" TaskInstance._execute_task")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("_execute_task")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" task_orig"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[t._v('"""\n    Execute Task (optionally with a Timeout) and push Xcom results.\n\n    :param context: Jinja2 context\n    :param task_orig: origin task\n    """')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" _execute_task"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" task_orig"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[s("code",[t._v("_execute_task")]),t._v("函数用于执行任务并在任务完成后推送XCom结果。它接受以下参数：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("task_instance")]),t._v("：任务实例（TaskInstance）或TaskInstancePydantic对象。")]),t._v(" "),s("li",[s("code",[t._v("context")]),t._v("：任务上下文（Context）对象，包含任务执行所需的信息。")]),t._v(" "),s("li",[s("code",[t._v("task_orig")]),t._v("：原始任务（Operator）对象。")])]),t._v(" "),s("p",[t._v("函数的主要步骤如下：")]),t._v(" "),s("ol",[s("li",[t._v("获取要执行的任务对象 "),s("code",[t._v("task_to_execute")]),t._v("。")]),t._v(" "),s("li",[t._v("检查任务是否为MappedOperator类型，如果是，则抛出异常。")]),t._v(" "),s("li",[t._v("根据任务实例的"),s("code",[t._v("next_method")]),t._v("属性，选择要执行的任务方法（"),s("code",[t._v("execute")]),t._v("或"),s("code",[t._v("resume_execution")]),t._v("）以及相应的参数。")]),t._v(" "),s("li",[t._v("定义一个内部函数"),s("code",[t._v("_execute_callable")]),t._v("，用于实际执行任务方法，并处理任务执行过程中的SystemExit异常。")]),t._v(" "),s("li",[t._v("如果任务具有执行超时限制，使用"),s("code",[t._v("timeout")]),t._v("上下文管理器确保任务在超时后被终止。在处理超时时，调用任务的"),s("code",[t._v("on_kill")]),t._v("方法并引发"),s("code",[t._v("AirflowTaskTimeout")]),t._v("异常。")]),t._v(" "),s("li",[t._v("如果任务没有执行超时限制，直接调用"),s("code",[t._v("_execute_callable")]),t._v("函数执行任务方法。")]),t._v(" "),s("li",[t._v("根据任务的"),s("code",[t._v("do_xcom_push")]),t._v("属性，决定是否将任务执行结果推送到XCom。如果任务返回结果并且"),s("code",[t._v("do_xcom_push")]),t._v("为True，则将结果推送到XCom。如果任务具有"),s("code",[t._v("multiple_outputs")]),t._v("属性，则需要对结果进行额外的检查和处理。")]),t._v(" "),s("li",[t._v("调用"),s("code",[t._v("_record_task_map_for_downstreams")]),t._v("函数记录任务映射，以便在下游任务中使用。")]),t._v(" "),s("li",[t._v("返回任务执行结果。")])]),t._v(" "),s("p",[t._v("在整个过程中，函数会处理任务执行过程中的各种异常情况，并确保任务在超时后被终止。同时，它还会根据任务的属性决定是否将任务执行结果推送到XCom。")]),t._v(" "),s("div",{staticClass:"language-python extra-class"},[s("pre",{pre:!0,attrs:{class:"language-python"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("_execute_task")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("task_instance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" TaskInstance "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" TaskInstancePydantic"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" task_orig"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Operator"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\n    task_to_execute "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" task_instance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("task\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" TYPE_CHECKING"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("assert")]),t._v(" task_to_execute\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("isinstance")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("task_to_execute"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" MappedOperator"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("raise")]),t._v(" AirflowException"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"MappedOperator cannot be executed."')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    execute_callable_kwargs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("dict")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("str")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Any"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    execute_callable"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Callable\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" task_instance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("next_method"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" task_instance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("next_method "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"execute"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("not")]),t._v(" task_instance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("next_kwargs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                task_instance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("next_kwargs "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            task_instance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("next_kwargs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string-interpolation"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('f"')]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("task_to_execute"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__class__"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__name__"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('__sentinel"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" _sentinel\n        execute_callable "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" task_to_execute"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("resume_execution\n        execute_callable_kwargs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"next_method"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" task_instance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("next_method\n        execute_callable_kwargs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"next_kwargs"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" task_instance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("next_kwargs\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        execute_callable "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" task_to_execute"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("execute\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" execute_callable"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__name__ "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"execute"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            execute_callable_kwargs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string-interpolation"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('f"')]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("task_to_execute"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__class__"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__name__"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('__sentinel"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" _sentinel\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("_execute_callable")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("execute_callable_kwargs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            log"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("info"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"::endgroup::"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" execute_callable"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("context"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("execute_callable_kwargs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("except")]),t._v(" SystemExit "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("code "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("is")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("not")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("and")]),t._v(" e"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("code "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("raise")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("finally")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Print a marker post execution for internals of post task processing")]),t._v("\n            log"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("info"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"::group::Post task execution logs"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" task_to_execute"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("execution_timeout"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" task_instance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("next_method "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("and")]),t._v(" task_instance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("start_date"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            timeout_seconds "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n                task_to_execute"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("execution_timeout "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("timezone"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("utcnow"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" task_instance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("start_date"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("total_seconds"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            timeout_seconds "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" task_to_execute"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("execution_timeout"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("total_seconds"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" timeout_seconds "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("raise")]),t._v(" AirflowTaskTimeout"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("with")]),t._v(" timeout"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("timeout_seconds"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                result "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" _execute_callable"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("context"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("execute_callable_kwargs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("except")]),t._v(" AirflowTaskTimeout"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            task_to_execute"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("on_kill"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("raise")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        result "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" _execute_callable"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("context"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("context"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("execute_callable_kwargs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("with")]),t._v(" create_session"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" session"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" task_to_execute"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("do_xcom_push"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            xcom_value "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" result\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n            xcom_value "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" xcom_value "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("is")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("not")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("None")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# If the task returns a result, push an XCom containing it.")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" task_to_execute"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("multiple_outputs"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("not")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("isinstance")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("xcom_value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" Mapping"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("raise")]),t._v(" AirflowException"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n                        "),s("span",{pre:!0,attrs:{class:"token string-interpolation"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('f"Returned output was type ')]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("xcom_value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v(' "')])]),t._v("\n                        "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"expected dictionary for multiple_outputs"')]),t._v("\n                    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" key "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" xcom_value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("keys"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("not")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("isinstance")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("str")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("raise")]),t._v(" AirflowException"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n                            "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Returned dictionary keys must be strings when using "')]),t._v("\n                            "),s("span",{pre:!0,attrs:{class:"token string-interpolation"}},[s("span",{pre:!0,attrs:{class:"token string"}},[t._v('f"multiple_outputs, found ')]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v(" (")]),s("span",{pre:!0,attrs:{class:"token interpolation"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v(') instead"')])]),t._v("\n                        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" xcom_value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("items"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n                    task_instance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("xcom_push"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" session"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("session"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n            task_instance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("xcom_push"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("key"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("XCOM_RETURN_KEY"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("xcom_value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" session"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("session"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        _record_task_map_for_downstreams"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n            task_instance"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("task_instance"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" task"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("task_orig"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" value"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("xcom_value"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" session"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("session\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" result\n")])])]),s("p",[t._v("这里默认调用的是execute方法执行任务实例。"),s("code",[t._v("execute")]),t._v("方法是"),s("code",[t._v("BaseOperator")]),t._v("类及其子类的方法。"),s("code",[t._v("BaseOperator")]),t._v("是所有Airflow操作符的基类。每个Airflow操作符都必须实现"),s("code",[t._v("execute")]),t._v("方法，该方法定义了当操作符被调度执行时应该执行的具体任务。")]),t._v(" "),s("p",[t._v("例如，"),s("code",[t._v("PythonOperator")]),t._v("是"),s("code",[t._v("BaseOperator")]),t._v("的一个子类，它的"),s("code",[t._v("execute")]),t._v("方法执行传入的Python函数；"),s("code",[t._v("BashOperator")]),t._v("的"),s("code",[t._v("execute")]),t._v("方法执行Bash命令；"),s("code",[t._v("BranchPythonOperator")]),t._v("的"),s("code",[t._v("execute")]),t._v("方法执行Python函数并返回要跳转到的任务等。")]),t._v(" "),s("p",[s("img",{staticStyle:{zoom:"50%"},attrs:{src:a(474),alt:"image-20240326094340078"}}),s("img",{staticStyle:{zoom:"50%"},attrs:{src:a(475),alt:"image-20240326094429613"}})]),t._v(" "),s("p",[t._v("至此，我们完整地分析了Airflow的流程引擎，从它的流程定义、解析和运行等方面进行源码分析。")]),t._v(" "),s("img",{staticStyle:{zoom:"15%"},attrs:{src:a(240)}})])}),[],!1,null,null,null);s.default=e.exports}}]);